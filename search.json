[{"path":"https://inbo.github.io/checklist/CODE_OF_CONDUCT.html","id":null,"dir":"","previous_headings":"","what":"Contributor Code of Conduct","title":"Contributor Code of Conduct","text":"contributors maintainers project, pledge respect people contribute reporting issues, posting feature requests, updating documentation, submitting pull requests patches, activities. committed making participation project harassment-free experience everyone, regardless level experience, gender, gender identity expression, sexual orientation, disability, personal appearance, body size, race, ethnicity, age, religion. Examples unacceptable behaviour participants include use sexual language imagery, derogatory comments personal attacks, trolling, public private harassment, insults, unprofessional conduct. Project maintainers right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct. Project maintainers follow Code Conduct may removed project team. Instances abusive, harassing, otherwise unacceptable behaviour may reported opening issue contacting one project maintainers. Code Conduct adapted Contributor Covenant (http://contributor-covenant.org), version 1.0.0, available http://contributor-covenant.org/version/1/0/0/","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"CONTRIBUTING","text":"Small typos grammatical errors documentation may edited directly using GitHub web interface, long changes made source file. E.g. edit roxygen2 comment .R file R/, .Rd file man/.","code":""},{"path":"https://inbo.github.io/checklist/CONTRIBUTING.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"CONTRIBUTING","text":"make substantial pull request, always file issue make sure someone team agrees ’s problem. ’ve found bug, create associated issue illustrate bug minimal reproducible example.","code":""},{"path":"https://inbo.github.io/checklist/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"","what":"Pull request process","title":"CONTRIBUTING","text":"recommend create Git branch pull request (PR). Look GitHub Actions build status making changes. README contain badges continuous integration services used package. require tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2. use testthat. Contributions test cases included easier accept. user-facing changes, add bullet top NEWS.md current development version header describing changes made followed GitHub username, links relevant issue(s)/PR(s).","code":""},{"path":"https://inbo.github.io/checklist/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"CONTRIBUTING","text":"Please note project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://inbo.github.io/checklist/CONTRIBUTING.html","id":"prefer-to-email","dir":"","previous_headings":"","what":"Prefer to Email?","title":"CONTRIBUTING","text":"Email person listed maintainer DESCRIPTION file repo. Though note private discussions email don’t help others - course email totally warranted ’s sensitive problem kind.","code":""},{"path":"https://inbo.github.io/checklist/CONTRIBUTING.html","id":"thanks-for-contributing","dir":"","previous_headings":"","what":"Thanks for contributing!","title":"CONTRIBUTING","text":"contributing guide adapted tidyverse contributing guide available https://raw.githubusercontent.com/r-lib/usethis/master/inst/templates/tidy-contributing.md","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU GENERAL PUBLIC LICENSE","title":"GNU GENERAL PUBLIC LICENSE","text":"Version 3, 29 June 2007 Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/ Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU GENERAL PUBLIC LICENSE","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions.","title":"GNU GENERAL PUBLIC LICENSE","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code.","title":"GNU GENERAL PUBLIC LICENSE","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions.","title":"GNU GENERAL PUBLIC LICENSE","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law.","title":"GNU GENERAL PUBLIC LICENSE","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: work must carry prominent notices stating modified , giving relevant date. work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms.","title":"GNU GENERAL PUBLIC LICENSE","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms.","title":"GNU GENERAL PUBLIC LICENSE","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: Disclaiming warranty limiting liability differently terms sections 15 16 License; Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; Limiting use publicity purposes names licensors authors material; Declining grant rights trademark law use trade names, trademarks, service marks; Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination.","title":"GNU GENERAL PUBLIC LICENSE","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies.","title":"GNU GENERAL PUBLIC LICENSE","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients.","title":"GNU GENERAL PUBLIC LICENSE","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents.","title":"GNU GENERAL PUBLIC LICENSE","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom.","title":"GNU GENERAL PUBLIC LICENSE","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License.","title":"GNU GENERAL PUBLIC LICENSE","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty.","title":"GNU GENERAL PUBLIC LICENSE","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability.","title":"GNU GENERAL PUBLIC LICENSE","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16.","title":"GNU GENERAL PUBLIC LICENSE","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://inbo.github.io/checklist/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU GENERAL PUBLIC LICENSE","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands `show w’ `show c’ show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see https://www.gnu.org/licenses/. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read https://www.gnu.org/licenses/--lgpl.html.","code":"<one line to give the program's name and a brief idea of what it does.>     Copyright (C) <year>  <name of author>      This program is free software: you can redistribute it and/or modify     it under the terms of the GNU General Public License as published by     the Free Software Foundation, either version 3 of the License, or     (at your option) any later version.      This program is distributed in the hope that it will be useful,     but WITHOUT ANY WARRANTY; without even the implied warranty of     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the     GNU General Public License for more details.      You should have received a copy of the GNU General Public License     along with this program.  If not, see <https://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author>     This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.     This is free software, and you are welcome to redistribute it     under certain conditions; type `show c' for details."},{"path":"https://inbo.github.io/checklist/articles/folder.html","id":"for-a-simple-r-project","dir":"Articles","previous_headings":"","what":"For a simple R project","title":"Recommended folder structure","text":"checklist assumes main folder project. Within main folder create checklist project contain R related files (scripts data). Place non R related files folders main folder. checklist project mandatory folder source place R Rmarkdown files. folders optional. data folder holds data files analysis. output folder holds rendered files analysis. media folder holds images want incorporate Rmarkdown files. inst folder stores checklist specific data. can add folders root checklist project, recommend stick default folders. non-standard folder name results warning running check_folder(). case want use version control (strongly recommended), use root R project root version control project.","code":"─┬─ main_folder  ├─── folder_a  ├─── folder_b  └─┬─ checklist_project_name    ├─── data    ├─── inst    ├─── media    ├─── output    └─── source"},{"path":"https://inbo.github.io/checklist/articles/folder.html","id":"a-more-complex-project","dir":"Articles","previous_headings":"","what":"A more complex project","title":"Recommended folder structure","text":"advise use subfolders source, data / media project complex. free create relevant folder structure folders. E.g. source/import scripts import data; source/analysis scripts run analysis source/report bookdown report.","code":"─┬─ main_folder  ├─── folder_a  ├─── folder_b  └─┬─ r_project_name    ├─┬─ data    │ ├─── raw    │ ├─── intermediate    │ └─── processed    ├─── inst    ├─┬─ media    │ ├─── collaborators    │ └─── report    ├─── output    └─┬─ source      ├─── import      ├─── analysis      └─── report"},{"path":"https://inbo.github.io/checklist/articles/folder.html","id":"a-project-with-several-reports-with-different-data-and-media","dir":"Articles","previous_headings":"","what":"A project with several reports with different data and media","title":"Recommended folder structure","text":"can opt use report specific data /media folders instead common data /media folders. However, choose report specific data folder, longer can common data folder. goes report specific media folder. Hence data folder project root implies user can find data folder. data folder project root implies user needs look data source folder report.","code":"─┬─ main_folder  ├─── folder_a  ├─── folder_b  └─┬─ r_project_name    ├─── inst    ├─── output    └─┬─ source      ├─┬─ report_a      │ ├─── data      │ └─── media      └─┬─ report_b        ├─── data        └─── media"},{"path":[]},{"path":"https://inbo.github.io/checklist/articles/getting_started.html","id":"prepare-online-setup","dir":"Articles","previous_headings":"Starting an R package from scratch","what":"Prepare online setup","title":"Setting up checklist for a package","text":"Go https://github.com login. Create new public repository INBO organisation. Use package name repository name. Enter repository name optionally description. Don’t add README, .gitignore LICENSE.","code":""},{"path":"https://inbo.github.io/checklist/articles/getting_started.html","id":"local-setup","dir":"Articles","previous_headings":"Starting an R package from scratch","what":"Local setup","title":"Setting up checklist for a package","text":"Install update checklist package remotes::install_github(\"inbo/checklist\"). Use checklist::create_package(). ’ll need provide package name, title, description maintainer. Please read documentation create_package() prior running function. function creates RStudio project package template folder name package. Open newly created RStudio project. Build pane, select > Configure Build Tools. Click Configure button add tick Install Restart. boxes except Vignettes must ticked. Close two dialogue boxes clicking OK buttons (box). Open README.Rmd file update content. Knit file stage README.Rmd README.md files. Review commit changes initial commit. Add least one function package. Build package. Run x <- checklist::check_package(). Fix issues arise checks. Repeat last two steps end single new note New submission. Run checklist::write_checklist(x). functions can convert ‘new’ warnings notes ‘allowed’ warnings notes. Run x <- checklist::check_package() check ‘allowed’ warnings notes remain. Repeat last four steps get problems found end checklist output. Commit remaining changes. Run git terminal command git remote add origin git@github.com:inbo/_your_package_name_.git replace _your_package_name_ actual repository name. Run terminal command git push -u origin main. run checklist test GitHub first time. orange circle, green thick mark red cross appear next latest commit PR.","code":""},{"path":"https://inbo.github.io/checklist/articles/getting_started.html","id":"finalise-online-setup","dir":"Articles","previous_headings":"Starting an R package from scratch","what":"Finalise online setup","title":"Setting up checklist for a package","text":"Go https://.codecov.io login GitHub account. Search package repository INBO organisation. Copy token. Go package repository GitHub. Choose Settings > Secrets. Add New repository secret name CODECOV_TOKEN token copied value. Wait tests finish (either green thick red cross). Require status checks pass merging Require branches date merging check package macOS-latest (release) ubuntu (oldrel) ubuntu (devel) windows (release) Go package GitHub repository Settings > Pages. Select Deploy branch source, gh-pages branch save changes.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/articles/getting_started.html","id":"prerequisites","dir":"Articles","previous_headings":"Get it working with an existing package or update the checklist","what":"Prerequisites","title":"Setting up checklist for a package","text":"Make sure package using git version control system. git status must clean. ’ll need commit changes first. OK Untracked files. need public remote git repository https://github.com/inbo.","code":""},{"path":"https://inbo.github.io/checklist/articles/getting_started.html","id":"local-setup-1","dir":"Articles","previous_headings":"Get it working with an existing package or update the checklist","what":"Local setup","title":"Setting up checklist for a package","text":"Install checklist package remotes::install_github(\"inbo/checklist\"). Run checklist::setup_package(). add /modify files. Inspect modified files, especially updating new checklist version made tweaks past. Commit changes. Run x <- checklist::check_package() fix issues. Repeat step issues problem. Commit remaining changes. Update checklist.yml checklist::write_checklist(x). function ask () current allowed warnings notes want keep. asks warnings notes want allow. ’ll need motivate . Run x <- checklist::check_package(). run without returning error.","code":""},{"path":"https://inbo.github.io/checklist/articles/getting_started.html","id":"online-setup","dir":"Articles","previous_headings":"Get it working with an existing package or update the checklist","what":"Online setup","title":"Setting up checklist for a package","text":"Go https://.codecov.io login GitHub account. Search package repository INBO organisation. Copy token. Go package repository GitHub. Choose Settings > Secrets. Create new repository secret name CODECOV_TOKEN token copied value. Push changes local repository GitHub. start checks GitHub. orange circle, green thick mark red cross appear next latest commit PR. Wait tests finish (either green thick red cross). Require status checks pass merging Require branches date merging check package macOS (release) ubuntu (oldrel) ubuntu (devel) windows (release) Go package GitHub repository Settings > Pages. Select Deploy branch source, gh-pages branch save changes.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/articles/getting_started.html","id":"failing-status-check-check-package","dir":"Articles","previous_headings":"Troubleshooting","what":"Failing status check check package","title":"Setting up checklist for a package","text":"Sometimes check package GitHub Action (GHA) may fail reasons failure one checks executed checklist::check_package(). likely due missing dependency action tries install R packages. case, GHAs, check_on_branch.yml check_on_main.yml files need modified missing dependency can installed. diagnose case action failed, can follow steps: Go check package GHA red cross (indicating failure) click details link. directed overview steps taken action. page scroll automatically final error occurs. ERROR: dependency 'sf' available package 'inborutils' ERROR: package installation failed case, make mental note package(s) failed install. Next, open raw logs clicking gear icon View raw logs. instance, example , culprit R package units - dependency sf - failed install, depended system dependency libudunits2-dev easiest way detect , search deb:. snippet might see: fix problem check_on_branch.yml check_on_main.yml files, install aptget command: case need multiple aptget dependencies, add single aptget item separated space. Add, commit push changes take effect GHAs.","code":"Configuration failed because libudunits2.so was not found. Try installing:  * deb: libudunits2-dev (Debian, Ubuntu, ...)  * rpm: udunits2-devel (Fedora, EPEL, ...)  * brew: udunits (OSX) ```     steps:       - uses: inbo/actions/check_pkg@master         with:           aptget: libudunits2-dev ``` ```     steps:       - uses: inbo/actions/check_pkg@master         with:           aptget: libudunits2-dev libpoppler-cpp-dev ```"},{"path":"https://inbo.github.io/checklist/articles/getting_started_project.html","id":"starting-a-new-project-from-scratch","dir":"Articles","previous_headings":"","what":"Starting a new project from scratch","title":"Setting up checklist for a project","text":"Run create_project(path, project). path must existing directory. project name project. create_project() creates project subdirectory path name project. guides interactively process asking questions preferences project. recommend answer yes yes/questions. Use setup_project() want change settings later. always get RStudio project name project. want file describing code conduct contributing project? template may alter suit needs. want file describing guidelines contributing project? template may alter suit needs. authors want list? title project? want check file name conventions check_filename()? want check coding style check_lintr()? default language project? want spell check markdown content R function documentation project check_spelling()? uses default language set previous question. Note can set different language specific files. See vignette(\"spelling\", package = \"checklist\") details . want check license file? compares LICENSE.md project LICENSE.md defined checklist. want update citation files?","code":""},{"path":"https://inbo.github.io/checklist/articles/getting_started_project.html","id":"add-or-update-checklist-tools-in-an-existing-project","dir":"Articles","previous_headings":"","what":"Add or update checklist tools in an existing project","title":"Setting up checklist for a project","text":"Run setup_project(path_to_your_project). works existing projects without previous set-checklist. case previous set-, take account. don’t use version control yet, want activate git? authors want list? title project? want check file name conventions check_filename()? want check coding style check_lintr()? want check license file set? want check spelling check_spelling(). want update citation files?","code":""},{"path":"https://inbo.github.io/checklist/articles/getting_started_project.html","id":"to-do-once-after-activating-version-control","dir":"Articles","previous_headings":"","what":"To do once after activating version control","title":"Setting up checklist for a project","text":"Make sure least one commit. Checkout main branch. Login https://github.com Create new repository without adding README, .gitignore license. checklist add files . Run code listed “…push existing repository command line” command line. activate “Always suggest updating pull request branches” activate “Automatically delete head branches” branch name pattern: main case team works project consider activate “Require approvals” search select “check project checklist” activate Require “branches date merging”","code":""},{"path":"https://inbo.github.io/checklist/articles/organisation.html","id":"what-is-an-organisation-in-the-checklist-context","dir":"Articles","previous_headings":"","what":"What is an organisation in the checklist context","title":"Organisations","text":"organisation object defines rules organisation related project (package). checklist assumes default project part Research Institute Nature Forest (INBO). enforce mention INBO copyright holder funder. rule limits use checklist outside INBO. Therefore added organisation object. contains following elements: GitHub organisation copyright holder funder organisation e-mail Zenodo community list organisation affiliations organisation affiliations must named list using email domain names names. Every element list containing elements affiliation orcid. affiliation character vector one allowed organisation names. Use multiple values add optional translations organisation name. orcid must either TRUE FALSE. Setting orcid TRUE requires every author matching e-mail ORCID number.","code":""},{"path":"https://inbo.github.io/checklist/articles/organisation.html","id":"defining-a-specific-organisation-for-a-project","dir":"Articles","previous_headings":"","what":"Defining a specific organisation for a project","title":"Organisations","text":"First generate object organisation$new(). store object project write_organisation(). function stores information organisation.yml, plain text file YAML format.","code":"library(checklist) # create a dummy project my_project_path <- tempfile(\"my_project\") dir.create(my_project_path) # create an organisation object org <- organisation$new(   rightsholder = \"Vlaamse overheid\", funder = \"Vlaamse overheid\",   email = \"info@vlaanderen.be\", github = \"vlaanderen\",   community = NA_character_,   organisation = list(     \"vlaanderen.be\" = list(       affiliation = \"Vlaamse overheid\", orcid = FALSE     )   ) ) # store the organisation in the dummy project write_organisation(org, my_project_path)"},{"path":"https://inbo.github.io/checklist/articles/organisation.html","id":"defining-a-default-organisation-object-for-your-machine","dir":"Articles","previous_headings":"","what":"Defining a default organisation object for your machine","title":"Organisations","text":"Store organisation default default_organisation(org = org). Whenever checklist needs organisation information, retrieve read_organisation(). first looks project root folder organisation.yml file. missing looks machines default organisation.yml. case copy machines default organisation.yml project. Hence organisation information part project, required use information checks machines. read_organisation() finds neither project organisation.yml machines default organisation.yml, reverts INBO organisation.","code":""},{"path":"https://inbo.github.io/checklist/articles/path.html","id":"do-not-use-absolute-file-paths","dir":"Articles","previous_headings":"","what":"Do not use absolute file paths","title":"File paths in code","text":"absolute file path defines location file folder starting root disk. example C:\\tmp\\test.txt Windows machine /tmp/test.txt Unix machine. Using absolute path code likely break code soon run different machine. file folder probably located somewhere else machine. check_lintr() looks absolute paths code turns error. check optional (strongly recommended) check_project() mandatory check_package().","code":""},{"path":"https://inbo.github.io/checklist/articles/path.html","id":"easiest-solution-use-relative-paths-within-the-project","dir":"Articles","previous_headings":"","what":"Easiest solution: use relative paths within the project","title":"File paths in code","text":"vignette(\"folder\", package = \"checklist\") recommend folder structure use R project. expect users run scripts base RStudio project working directory. base RStudio project one containing checklist.yml file. Make every path relative location file. case Rmarkdown files, use paths relative location main Rmarkdown file. make sure work RStudio project location file. Note can “nested” RStudio projects. Let’s illustrate example. assume base RStudio project checklist.yml file root. Suppose main Rmarkdown file source/bookdown/index.Rmd. RStudio project source/bookdown, working directory default location. one code chunks want read data/observations.txt. point read function ../../data/observations.txt. .. moves one step towards root disk. working directory within Rmarkdown files source/bookdown. single .. points case source. ../.. points source/bookdown root project. need move data folder using ../../data. Another option use get_path method checklist object get location. use information define absolute location files within project.","code":"library(checklist) x <- read_checklist() file.path(x$get_path, \"data\", \"observations.txt\")"},{"path":"https://inbo.github.io/checklist/articles/path.html","id":"alternative-solution-use-relative-paths-between-projects","dir":"Articles","previous_headings":"","what":"Alternative solution: use relative paths between projects","title":"File paths in code","text":"Sometimes need store data outside project. example several projects share data. case can place projects data shared folder structure. can still rely relative paths point common data outside project. Note requires every user complies use structure. maintainer document structure give user instructions set project. good example can found data storage vignette n2khab package.","code":"superproject |-- shared_data |-- project_a   |-- source |-- project_b   |-- source"},{"path":"https://inbo.github.io/checklist/articles/path.html","id":"fallback-solution-ask-the-user-to-specify-the-path","dir":"Articles","previous_headings":"","what":"Fallback solution: ask the user to specify the path","title":"File paths in code","text":"solution relies setting system variable computer user. Simply create .Renviron text file root RStudio project. file contains list key-value pairs shown example . Please choose suitable name MYPROJECT_DATA. Using project specific name minimises potential multiple projects using system variables. Content .Renviron Starting RStudio project load system variables set .Renviron. Keep mind need might .Renviron every RStudio project use trick. Location .Renviron following R code chunk illustrates read use system variable. Besides writing good documentation, check content system variable. code provide helpful errors user fails set correct system variable. example use stopifnot(). function uses named expressions. Every expression must yield single TRUE FALSE. expression yields FALSE, function returns error using name expression. expression yields TRUE, code continues without message.","code":"MYPROJECT_DATA=\"C:\\temp\" project_a |-- .Renviron |-- project_a.Rproj |-- data |-- source   |-- bookdown     |-- .Renviron     |-- bookdown.Rproj     |-- index.Rmd   |-- script.R data_path <- Sys.getenv(\"MYPROJECT_DATA\", NA) stopifnot(   \"System variable `MYPROJECT_DATA` not set\" = !is.na(data_path),   \"`MYPROJECT_DATA` is not an existing directory\" = file_test(\"-d\", data_path) ) file.path(data_path, \"data\", \"observations.txt\")"},{"path":"https://inbo.github.io/checklist/articles/philosophy.html","id":"coding-style","dir":"Articles","previous_headings":"","what":"Coding style","title":"Philosophy of the checklist package","text":"visible part coding style naming convention. People use many different styles naming conventions within R ecosystem (Bååth 2012). Popular ones alllowercase, period.separated, underscore_separated, lowerCamelCase UpperCamelCase. picked underscore_separated naming convention tidyverse packages. also default setting lintr package use static code analysis. first seems lot memorise. RStudio makes things easier activate diagnostic options (Tools > Global options > Code > Diagnostics). highlights several problems showing squiggly line /warning icon line number. Instead learning rules heart, run check_lintr() regularly fix issues come . working every single project. enforces consistently use coding style, making easy learn use .","code":""},{"path":"https://inbo.github.io/checklist/articles/philosophy.html","id":"rules-for-coding-style","dir":"Articles","previous_headings":"Coding style","what":"Rules for coding style","title":"Philosophy of the checklist package","text":"underscore_separated names functions, parameters variables. line code comments must longer 80 characters. Pro tip: RStudio display margin editor. Tools > Global options > Code > Display > Show margin Object names must longer 30 characters. pipe (%>%) never always { } Use spaces instead tabs. Pro tip: make RStudio place 2 spaces hit tab key. Tools > Global options > Code > Editing > Insert spaces tabs assignments <-, ->, = operators like +, -,*, /, … space one space , except constructs like (), (), () One space ) {, e.g. function () { Use double quotes (\") define character strings. spaces end line blank lines end script","code":""},{"path":"https://inbo.github.io/checklist/articles/philosophy.html","id":"static-code-analysis-checks","dir":"Articles","previous_headings":"Coding style","what":"Static code analysis checks","title":"Philosophy of the checklist package","text":"object defined use ? use object defined ? Use <- -> assign something. use = pass arguments function (e.g. check_package(fail = TRUE)). Use .na(x) instead x == NA. Use seq_len() seq_along() instead 1:length(x), 1:nrow(x), … Advantage: length(x) == 0, 1:length(x) yields c(1, 0), whereas seq_along(x) yield empty vector. Don’t store code comments. don’t want lose code, use version control systems like git. code need run special circumstances, either put code separate script run manually write -else run code automatically needed. Use assertthat::assert_that() validate object conditions instead () stop(). See can use ifelse() instead (). Split main function code sub functions. Don’t use else strictly necessary.","code":""},{"path":"https://inbo.github.io/checklist/articles/philosophy.html","id":"file-name-conventions","dir":"Articles","previous_headings":"","what":"File name conventions","title":"Philosophy of the checklist package","text":"make easier remember choose name conventions file names objects. acknowledge rules sometimes clash requirements sources (e.g. DESCRIPTION R package, README.md GitHub, .gitignore git, …). case allow file names required R, git GitHub. check_filename() unfairly allow certain file folder name, please open issue GitHub motivate allowed.","code":""},{"path":"https://inbo.github.io/checklist/articles/philosophy.html","id":"rules-for-folder-names","dir":"Articles","previous_headings":"File name conventions","what":"Rules for folder names","title":"Philosophy of the checklist package","text":"Folder names contain lower case letters, numbers underscore (_). can start single dot (.).","code":""},{"path":"https://inbo.github.io/checklist/articles/philosophy.html","id":"rules-for-file-names","dir":"Articles","previous_headings":"File name conventions","what":"Rules for file names","title":"Philosophy of the checklist package","text":"Base names contain lower case letters, numbers underscore (_). File extensions contains lower case letters numbers. Exceptions: file extensions related R must upper case R (.R, .Rmd, .Rd, .Rnw, .Rproj).","code":""},{"path":"https://inbo.github.io/checklist/articles/philosophy.html","id":"rules-for-graphical-file-names","dir":"Articles","previous_headings":"File name conventions","what":"Rules for graphical file names","title":"Philosophy of the checklist package","text":"Applies files extensions csl, eps, jpg, jpeg, pdf, png ps. rules except need use dash (-) separator instead underscore (_). need exception underscores cause problems certain situations.","code":""},{"path":"https://inbo.github.io/checklist/articles/philosophy.html","id":"bundling-your-code-in-a-package","dir":"Articles","previous_headings":"","what":"Bundling your code in a package","title":"Philosophy of the checklist package","text":"users think R package collection generic functions can use run analysis. However, R package useful way bundle document stand-alone analysis ! Suppose want pass code collaborator future self working different computer. project folder bunch files, people need get know project structure, find scripts run dependencies need. Unless documented everything well (including future self!) hard time figuring things work. analysis package running check_package() ensure minimal quality standard, makes things lot easier user. Agreed, take bit time create analysis, especially first projects. long run save time due better quality code. Try start packaging recurrent analysis standardised report want learn writing package. experience, little overhead smaller analysis. Keep mind seldom run analysis exactly .","code":""},{"path":"https://inbo.github.io/checklist/articles/philosophy.html","id":"benefits","dir":"Articles","previous_headings":"Bundling your code in a package","what":"Benefits","title":"Philosophy of the checklist package","text":"package way cite (specific version ) analysis report paper. list dependencies R packages. makes installing code simple running remotes::install_github(\"inbo/packagename\"). must split analysis set functions. Say goodbye scripts thousands lines code. Functions make easy re-use code. Need run thing different parameter value? Add parameter argument function run function every different parameter value. avoids need copy-paste large chunks scripts replace values. copy-paste work flow typically results hard--read long scripts. Imagine made mistake code copy-pasted mistake several times found . check entire project fix mistake several times. function reduces workload fixing function. Packages require every object either defined within package imported another package. Global variables allowed. user needs load package run function required arguments. results depend packages loaded user-defined objects like vectors dataframes (unless user passes explicitly arguments function). package gives opportunity add documentation code. Afterwards can simply consult documentation rather dig code find actually . Every function needs least title entry every argument. likely still need short script combines high level functions package run analysis. inst folder ideal place bundle scripts within package. can also use store small (!) datasets rmarkdown reports.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/articles/spelling.html","id":"configuration","dir":"Articles","previous_headings":"","what":"Configuration","title":"Spell checking with checklist","text":"configuration check_spelling() stored checklist.yml file root project. comprises default language use spell checking optionally files exclude spell checking spell check using different language. Use setup_package() setup_project() first. recommend follow steps vignette(\"getting_started\", package = \"checklist\") set-checklist.yml. case package must set language Language: field DESCRIPTION file. case Language: field set, en-GB used. setup_project() ask default language set store information checklist.yml. Note language defined xx-YY syntax. first two letters must lower case (xx) define language. last two letters must upper case (YY) define language variant. relevant examples: en-GB: English written UK. en-US: English written USA. nl-: Dutch written Belgium. nl-NL: Dutch written Netherlands. can change setting, must read current settings x <- read_checklist(path). object several methods change spell checking settings. x$set_default(language) changes default language. x$set_exceptions() allows review current settings relevant folders files within project. must choose keeping current configuration, using default language files change setting files. select last options, function starts root project lists relevant files folders root. case file, can choose ignore file, use default language use additional language. select options case folder, recursively apply files folder. change setting files, function gives extra option case folder. updating settings, need store write_checklist(x). check_spelling() now use updated settings.","code":"# This code assumes your working directory is at the root of your project. # Pass the path to the project root to read_checklist() if that is not the case. x <- read_checklist() x$set_default(\"nl-BE\") x$set_exceptions() write_checklist(x)"},{"path":"https://inbo.github.io/checklist/articles/spelling.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Spell checking with checklist","text":"Run check_spelling() working directory project. run check_spelling(path) path points directory files want spell check. look markdown files (.md .Rmd) within directory subdirectories. case project R package, also check R help files (.Rd) man directory. Note check_spelling() check R code. Neither .R files chunks .Rmd files. function returns data.frame every word present dictionary. Displaying data.frame R session outside RStudio lists unknown words per file combined line column number appear. display data.frame RStudio, opens Markers tab. Clicking issue tab open corresponding file move cursor line. issues typos need fixed. Others words listed available dictionaries. following options work .Rmd .Rd files. check_spelling() ignores words verbatim syntax (back ticks “`”). Exclude entire file spell checking. details configuration section. Add words project specific custom dictionary (see ). options handle words .Rmd files. can ignore entire line placing <!-- spell-check: ignore --> end line. Ignore block lines adding extra line <!-- spell-check: ignore:start --> beginning block. End block <!-- spell-check: ignore:end --> new line.","code":""},{"path":"https://inbo.github.io/checklist/articles/spelling.html","id":"custom-dictionary","dir":"Articles","previous_headings":"","what":"Custom dictionary","title":"Spell checking with checklist","text":"First make sure check_spelling() returns words want add custom dictionary. Next store output check_spelling() object use object input custom_directory(). append words .dic file inst folder. Running check_spelling() return empty list issues. use technical terms quit often. Can use common custom dictionary instead project based custom dictionary? . Project based custom dictionaries located within project. required make project reproducible. can copy .dic files projects.","code":"issues <- check_spelling() custom_dictionary(issues)"},{"path":"https://inbo.github.io/checklist/articles/spelling.html","id":"rd-files","dir":"Articles","previous_headings":"","what":"Rd files","title":"Spell checking with checklist","text":"Rd files contain information help files functions R package. recommend use Roxygen2 write documentation alongside code functions. Building package generate Rd files automatically. check_spelling() check Roxygen2 comments R script ignore matching Rd files.","code":""},{"path":"https://inbo.github.io/checklist/articles/spelling.html","id":"quarto-projects","dir":"Articles","previous_headings":"","what":"Quarto projects","title":"Spell checking with checklist","text":"check_spelling() finds Quarto book project, check lang set _quarto.yml. check_spelling() uses lang files listed book: chapters book: appendices tabs. Please use Quarto specific markdown specify sections different language. two examples.","code":"::: {lang=nl-BE}     Paragraph in Dutch     ::: A sentence with a [word]{lang=nl-BE} in Dutch."},{"path":"https://inbo.github.io/checklist/articles/zenodo.html","id":"what-is-zenodo","dir":"Articles","previous_headings":"","what":"What is Zenodo?","title":"Setting up the integration between GitHub, Zenodo and ORCID","text":"Built developed researchers, ensure everyone can join Open Science. OpenAIRE project, vanguard open access open data movements Europe commissioned EC support nascent Open Data policy providing catch-repository EC funded research. CERN, OpenAIRE partner pioneer open source, open access open data, provided capability Zenodo launched May 2013 (European Organization Nuclear Research OpenAIRE 2013). support research programme CERN developed tools Big Data management extended Digital Library capabilities Open Data. Zenodo Big Science tools effectively shared long-tail research. Publishing package code Zenodo several benefits. code archived free charge. code remains publicly available, even GitHub repository removed. code gets DOI, making easier cite code track citations. Every release gets release dedicated DOI always points latest release. gives user choice citing code general specific version.","code":""},{"path":"https://inbo.github.io/checklist/articles/zenodo.html","id":"what-is-orcid","dir":"Articles","previous_headings":"","what":"What is ORCID?","title":"Setting up the integration between GitHub, Zenodo and ORCID","text":"ORCID, stands Open Researcher Contributor ID, global, --profit organization sustained fees member organizations. community-built governed Board Directors representative membership wide stakeholder representation. ORCID supported dedicated knowledgeable professional staff. Individual researchers heart everything ORCID always access records data free. don’t already ORCID iD, register one today! Researchers can identify ORCID iD publications. solves potential ambiguity dues several persons name different spellings researchers name. ORCID provides researchers easy way publish list publication ORCID profile. researcher can manually add publications profile. ORCID links several data providers (e.g. publishers, Zenodo). researchers can setup ORCID add new publications automatically profile. makes easier maintain updated list publications.","code":""},{"path":"https://inbo.github.io/checklist/articles/zenodo.html","id":"why-integrate-zenodo-and-orcid-with-github","dir":"Articles","previous_headings":"","what":"Why integrate Zenodo and ORCID with GitHub?","title":"Setting up the integration between GitHub, Zenodo and ORCID","text":"Setting integration benefit new package version automatically gets unique DOI added ORCID profile.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/articles/zenodo.html","id":"once","dir":"Articles","previous_headings":"Why integrate Zenodo and ORCID with GitHub? > Setup ORCID","what":"Once","title":"Setting up the integration between GitHub, Zenodo and ORCID","text":"Create account https://orcid.org Go DataCite select “Sign ”. Select “Sign Globus”, “Sign ORCID iD”. Authorise access Globus Auth.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/articles/zenodo.html","id":"once-1","dir":"Articles","previous_headings":"Why integrate Zenodo and ORCID with GitHub? > Setup Zenodo","what":"Once","title":"Setting up the integration between GitHub, Zenodo and ORCID","text":"Create account using ORCID https://zenodo.org/signup/","code":""},{"path":"https://inbo.github.io/checklist/articles/zenodo.html","id":"once-per-repository","dir":"Articles","previous_headings":"Why integrate Zenodo and ORCID with GitHub? > Setup Zenodo","what":"Once per repository","title":"Setting up the integration between GitHub, Zenodo and ORCID","text":"Log-Zenodo. Go drop-box associated account (top right) choose GitHub. Find repository list repositories. Use “Sync now” button can’t find repository. Note can use public repositories. Flip switch repository “”.","code":""},{"path":"https://inbo.github.io/checklist/articles/zenodo.html","id":"what-happens-next","dir":"Articles","previous_headings":"Why integrate Zenodo and ORCID with GitHub?","what":"What happens next?","title":"Setting up the integration between GitHub, Zenodo and ORCID","text":"Make sure ’ve set-code package checklist support. See vignette(\"getting_started\", package = \"checklist\") . Add ORCID contributors DESCRIPTION. Pushing new commits GitHub triggers GitHub action runs check_package(). makes sure citation information CITATION, CITATION.cff .zenodo.json date. Zenodo uses latter meta data new DOI. Merging pull request main branch trigger GitHub Action workflow adds new tag version number. makes version package installable remotes::install_github(\"organisation/package@tag\") (replace organisation, package tag appropriate values). tag “v” followed version number (e.g. v0.5.2). Adding tag triggers another GitHub Action workflow creates new release. relevant content NEWS.md becomes description release. Zenodo detects new release, creates DOI publishes . Zenodo passes citation metadata ORCID contributors ORCID listed DESCRIPTION. ORCID adds publication information users added DataCite integration.","code":""},{"path":"https://inbo.github.io/checklist/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Thierry Onkelinx. Author, maintainer.            Research Institute Nature Forest (INBO) Els Lommelen. Contributor.            Research Institute Nature Forest (INBO) Hans Van Calster. Contributor.            Research Institute Nature Forest (INBO) . Copyright holder, funder.","code":""},{"path":"https://inbo.github.io/checklist/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Onkelinx, Thierry (2025) checklist: Thorough Strict Set Checks R Packages Source Code. Version 0.4.2. https://inbo.github.io/checklist/","code":"@Manual{,   title = {checklist: A Thorough and Strict Set of Checks for R Packages and Source Code. Version 0.4.2},   author = {Thierry Onkelinx},   year = {2025},   url = {https://inbo.github.io/checklist/},   abstract = {An opinionated set of rules for R packages and R source code projects.},   keywords = {quality control; documentation; publication},   doi = {10.5281/zenodo.4028303}, }"},{"path":"https://inbo.github.io/checklist/index.html","id":"the-checklist-package-","dir":"","previous_headings":"","what":"A Thorough and Strict Set of Checks for R Packages and Source Code","title":"A Thorough and Strict Set of Checks for R Packages and Source Code","text":"goal checklist provide elaborate strict set checks R packages R code.","code":""},{"path":"https://inbo.github.io/checklist/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A Thorough and Strict Set of Checks for R Packages and Source Code","text":"can install package INBO universe via doesn’t work, can install version GitHub :","code":"# Enable the INBO universe options(   repos = c(     inbo = \"https://inbo.r-universe.dev\", CRAN = \"https://cloud.r-project.org\"   ) ) # Install the packages install.packages(\"checklist\", dependencies = TRUE) # install.packages(\"remotes\") remotes::install_github(\"inbo/checklist\", dependencies = TRUE)"},{"path":"https://inbo.github.io/checklist/index.html","id":"setting-a-default-organisation","dir":"","previous_headings":"","what":"Setting a default organisation","title":"A Thorough and Strict Set of Checks for R Packages and Source Code","text":"created checklist Research Institute Nature Forest (INBO) mind. don’t specify organisation, checklist assumes code written INBO personnel. INBO specific requirements relevant external users checklist. writing code INBO, recommend set default organisation. specify defaults INBO. details vignette(\"organisation\", package = \"checklist\").","code":"library(checklist) org <- organisation$new(   github = \"inbo\", community = \"inbo\", email = \"info@inbo.be\",   rightsholder = \"Research Institute for Nature and Forest (INBO)\",   funder = \"Research Institute for Nature and Forest (INBO)\",   organisation = list(     \"inbo.be\" = list(       affiliation = c(         en = \"Research Institute for Nature and Forest (INBO)\",         nl = \"Instituut voor Natuur en Bosonderzoek (INBO)\"       ),       orcid = TRUE     )    ) ) default_organisation(org = org)"},{"path":"https://inbo.github.io/checklist/index.html","id":"using-checklist-on-a-package","dir":"","previous_headings":"","what":"Using checklist on a package.","title":"A Thorough and Strict Set of Checks for R Packages and Source Code","text":"can run checks, must initialise checklist package. Either use create_package() create new package scratch. use setup_package() existing package. details vignette(\"getting_started\", package = \"checklist\"). initialised, can run checks check_package(). run individual checks. allow warnings notes, first run checks store object. Update checklist.yml writing object.","code":"create_package() check_cran() check_description() check_documentation() check_lintr() check_filename() check_folder() update_citation() x <- check_package() write_checklist(x)"},{"path":"https://inbo.github.io/checklist/index.html","id":"using-checklist-on-a-project","dir":"","previous_headings":"","what":"Using checklist on a project.","title":"A Thorough and Strict Set of Checks for R Packages and Source Code","text":"can run checks, must initialise checklist project. Either use create_project() create new package scratch. use setup_project() existing package. details vignette(\"getting_started_project\", package = \"checklist\"). initialised, can run checks check_project(). run individual checks. allow warnings notes, first run checks store object. Update checklist.yml writing object.","code":"library(checklist) create_project() check_lintr() check_filename() check_folder() update_citation() x <- check_project() write_checklist(x)"},{"path":"https://inbo.github.io/checklist/reference/add_badges.html","id":null,"dir":"Reference","previous_headings":"","what":"add badges to a README — add_badges","title":"add badges to a README — add_badges","text":"check_package: add package check badge check_project: add project check badge doi: add DOI badge url: add website badge version: add version badge","code":""},{"path":"https://inbo.github.io/checklist/reference/add_badges.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"add badges to a README — add_badges","text":"","code":"add_badges(x = \".\", ...)"},{"path":"https://inbo.github.io/checklist/reference/add_badges.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"add badges to a README — add_badges","text":"x Either checklist object path source code. Defaults .. ... Additional arguments","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/add_badges.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"add badges to a README — add_badges","text":"","code":"if (FALSE) { # \\dontrun{   add_badges(url = \"https://www.inbo.be\")   add_badges(doi = \"10.5281/zenodo.8063503\")   add_badges(check_project = \"inbo/checklist\")   add_badges(check_package = \"inbo/checklist\")   add_badges(version = \"v0.1.2\")   add_badges(url = \"https://www.inbo.be\", doi = \"10.5281/zenodo.8063503\") } # }"},{"path":"https://inbo.github.io/checklist/reference/ask_yes_no.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to ask a simple yes no question — ask_yes_no","title":"Function to ask a simple yes no question — ask_yes_no","text":"Function ask simple yes question","code":""},{"path":"https://inbo.github.io/checklist/reference/ask_yes_no.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to ask a simple yes no question — ask_yes_no","text":"","code":"ask_yes_no(msg, default = TRUE, prompts = c(\"Yes\", \"No\", \"Cancel\"), ...)"},{"path":"https://inbo.github.io/checklist/reference/ask_yes_no.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to ask a simple yes no question — ask_yes_no","text":"msg prompt message user. default default response. prompts :  character vector containing 3 prompts corresponding return values TRUE, FALSE, NA, single character value containing prompts separated / characters, function call. ... Additional parameters, ignored default function.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/author2df.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert person object in a data.frame. — author2df","title":"Convert person object in a data.frame. — author2df","text":"Results data.frame given name, family name, e-mail, ORCID, affiliation role. Missing elements result empty string (\"\"). Persons multiple roles roles comma separated string.","code":""},{"path":"https://inbo.github.io/checklist/reference/author2df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert person object in a data.frame. — author2df","text":"","code":"author2df(person)"},{"path":"https://inbo.github.io/checklist/reference/author2df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert person object in a data.frame. — author2df","text":"person person object list person objects, NA NULL. \"character\" converted person object using .person() warning.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/bookdown_zenodo.html","id":null,"dir":"Reference","previous_headings":"","what":"Render a bookdown and upload to Zenodo — bookdown_zenodo","title":"Render a bookdown and upload to Zenodo — bookdown_zenodo","text":"First clears existing files output_dir set _bookdown_.yml. renders required output formats uploads Zenodo. bookdown_zenodo() creates draft record specify community yaml. Otherwise creates review request first community.","code":""},{"path":"https://inbo.github.io/checklist/reference/bookdown_zenodo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render a bookdown and upload to Zenodo — bookdown_zenodo","text":"","code":"bookdown_zenodo(   path,   zip_format = c(\"bookdown::gitbook\", \"INBOmd::gitbook\"),   single_format = c(\"bookdown::pdf_book\", \"bookdown::epub_book\", \"INBOmd::pdf_report\",     \"INBOmd::epub_book\"),   token,   sandbox = TRUE,   logger = \"INFO\" )"},{"path":"https://inbo.github.io/checklist/reference/bookdown_zenodo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render a bookdown and upload to Zenodo — bookdown_zenodo","text":"path root folder report zip_format vector output formats generate multiple files. function bundle files zip file every format. single_format vector output formats generate single output file. output remain . token user token Zenodo. default attempt made retrieve token using zenodo_pat(). sandbox TRUE, upload test version https://sandbox.zenodo.org. FALSE, upload final version https://zenodo.org. logger Type logger Zenodo upload. Defaults \"INFO\" provides minimal logs. Use NULL hide logs. \"DEBUG\" provides full log.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/c_sort.html","id":null,"dir":"Reference","previous_headings":"","what":"Sort using the C locale — c_sort","title":"Sort using the C locale — c_sort","text":"Setting locale sorting ensures stable sorting order","code":""},{"path":"https://inbo.github.io/checklist/reference/c_sort.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Sort using the C locale — c_sort","text":"","code":"c_sort(x, ...)"},{"path":"https://inbo.github.io/checklist/reference/c_sort.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Sort using the C locale — c_sort","text":"x sort R object class numeric,     complex, character logical vector.  sort.int,     numeric, complex, character logical vector, factor. ... arguments passed methods (    default methods objects without class) sort.int.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_codemeta.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the package metadata — check_codemeta","title":"Check the package metadata — check_codemeta","text":"Use checks codemetar::give_opinions().","code":""},{"path":"https://inbo.github.io/checklist/reference/check_codemeta.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the package metadata — check_codemeta","text":"","code":"check_codemeta(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/check_codemeta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the package metadata — check_codemeta","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":"https://inbo.github.io/checklist/reference/check_codemeta.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the package metadata — check_codemeta","text":"checklist object.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_cran.html","id":null,"dir":"Reference","previous_headings":"","what":"Run all the package checks required by CRAN — check_cran","title":"Run all the package checks required by CRAN — check_cran","text":"CRAN imposes impressive list tests every package publication. suite test available every R installation. Hence use full suite tests . Notice check_package() runs several additional tests.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_cran.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run all the package checks required by CRAN — check_cran","text":"","code":"check_cran(x = \".\", quiet = FALSE)"},{"path":"https://inbo.github.io/checklist/reference/check_cran.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run all the package checks required by CRAN — check_cran","text":"x Either checklist object path source code. Defaults .. quiet Whether print check output checking.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_cran.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Run all the package checks required by CRAN — check_cran","text":"checklist object.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_description.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the DESCRIPTION file — check_description","title":"Check the DESCRIPTION file — check_description","text":"DESCRIPTION file contains important meta-data package. good DESCRIPTION tidy, meaningful version number, full author details clear license.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_description.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the DESCRIPTION file — check_description","text":"","code":"check_description(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/check_description.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the DESCRIPTION file — check_description","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":"https://inbo.github.io/checklist/reference/check_description.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the DESCRIPTION file — check_description","text":"function ensures DESCRIPTION tidy, using tidy_desc(). version number package must either 0.0 0.0.0 format (see discussion allow formats). version number every branch must larger current version number main master branch. New commits main master must larger version number previous commit. recommend protect main master branch commit main master. Furthermore check author information. INBO listed copyright holder funder? every author ORCID? check license check_license().","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_documentation.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the documentation — check_documentation","title":"Check the documentation — check_documentation","text":"function make sure documentation date. Rules: must use roxygen2 document functions. use README.Rmd, rendered. need least README.md. use NEWS.Rmd NEWS.md. NEWS.md must contain entry current package version.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_documentation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the documentation — check_documentation","text":"","code":"check_documentation(x = \".\", quiet = FALSE)"},{"path":"https://inbo.github.io/checklist/reference/check_documentation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the documentation — check_documentation","text":"x Either checklist object path source code. Defaults .. quiet Whether print check output checking.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_documentation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the documentation — check_documentation","text":"function generates help files roxygen2 tag R code. checks whether help files changed. use principle README.Rmd. file changed, documentation match code. Hence check_documentation() returns error. side effect running check_documentation() locally, generates documentation. thing left , commit changes. Pro tip: make sure RStudio renders roxygen2 tags whenever install restart package. describe vignette(\"getting_started\") \"Prepare local setup\".","code":""},{"path":"https://inbo.github.io/checklist/reference/check_documentation.html","id":"required-format-for-news-md","dir":"Reference","previous_headings":"","what":"Required format for NEWS.md","title":"Check the documentation — check_documentation","text":"","code":"# package_name version  * Description of something that changed. * Lines should not exceed 80 characters.   Start a new line with two space to continue an item. * Add a single blank line before and after each header.  ## Second level heading  * You can use second level headings when you want to add more structure.   # `package_name` version   * Adding back ticks around the package name is allowed."},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_environment.html","id":null,"dir":"Reference","previous_headings":"","what":"Make sure that the required environment variables are set on GitHub — check_environment","title":"Make sure that the required environment variables are set on GitHub — check_environment","text":"actions fail environment variables set. function work GitHub.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_environment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make sure that the required environment variables are set on GitHub — check_environment","text":"","code":"check_environment(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/check_environment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make sure that the required environment variables are set on GitHub — check_environment","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":"https://inbo.github.io/checklist/reference/check_environment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make sure that the required environment variables are set on GitHub — check_environment","text":"invisible checklist object.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_filename.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the style of file and folder names — check_filename","title":"Check the style of file and folder names — check_filename","text":"consistent naming schema avoids problems working together, especially working different OS. OS (e.g. Windows) case-insensitive whereas others (e.g. Linux) case-sensitive. Note checklist GitHub Actions test code Linux, Windows MacOS.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_filename.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the style of file and folder names — check_filename","text":"","code":"check_filename(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/check_filename.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the style of file and folder names — check_filename","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":"https://inbo.github.io/checklist/reference/check_filename.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the style of file and folder names — check_filename","text":"sections describe default rules. allow several exceptions community standard different. E.g. package stores function scripts R folder, standard enforces lower case folder names. Use community standard, even conform checklist rules. likely checklist exception name. , can file issue motivate think add exception.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_filename.html","id":"rules-for-folder-names","dir":"Reference","previous_headings":"","what":"Rules for folder names","title":"Check the style of file and folder names — check_filename","text":"Folder names contain lower case letters, numbers, dashes (-) underscores (_). can start single dot (.).","code":""},{"path":"https://inbo.github.io/checklist/reference/check_filename.html","id":"default-rules-for-file-names","dir":"Reference","previous_headings":"","what":"Default rules for file names","title":"Check the style of file and folder names — check_filename","text":"Base names contain lower case letters, numbers, dashes (-) underscores (_). File extensions contain lower case letters numbers. Exceptions: file extensions related R must upper case R ( .R, .Rd, .Rda, .Rnw, .Rmd, .Rproj). Exception exceptions: R/sysdata.rda.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_filename.html","id":"exceptions-for-some-file-formats","dir":"Reference","previous_headings":"","what":"Exceptions for some file formats","title":"Check the style of file and folder names — check_filename","text":"Underscores (_) causes problems graphical files using LaTeX create pdf output. generate pdf output rmarkdown. Therefore need use dash (-) separator instead underscores (_). Applies files extensions eps, jpg, jpeg, pdf, png, ps, svg .cls. ignore files .otf .ttf extensions. fonts files often require file name scheme.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_folder.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the folder structure — check_folder","title":"Check the folder structure — check_folder","text":"time , function checks projects. Keep mind R packages requirements folder structure. one things check_cran() checks.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_folder.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the folder structure — check_folder","text":"","code":"check_folder(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/check_folder.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the folder structure — check_folder","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":"https://inbo.github.io/checklist/reference/check_folder.html","id":"recommended-folder-structure","dir":"Reference","previous_headings":"","what":"Recommended folder structure","title":"Check the folder structure — check_folder","text":"source: contains R scripts Rmd files. data: contains data files.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_folder.html","id":"source","dir":"Reference","previous_headings":"","what":"source","title":"Check the folder structure — check_folder","text":"simple project R scripts Rmd files can place files directly source folder. elaborate projects place files several folders source. Place every bookdown document dedicated folder. create RStudio project folder.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_folder.html","id":"data","dir":"Reference","previous_headings":"","what":"data","title":"Check the folder structure — check_folder","text":"Simple projects source subfolders, place data root project. elaborate project must choose either data root project data subfolder subfolders source. E.g. source/report/data. Place data open file format. E.g. csv, txt tsv tabular data. strongly recommend use git2rdata::write_vc() store data. Use geopackage format spatial data. Optionally add description data markdown files.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_license.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the license of a package — check_license","title":"Check the license of a package — check_license","text":"Every package needs clear license. Without license, end-users clue conditions can use package. must specify license DESCRIPTION provide LICENSE.md file.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_license.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the license of a package — check_license","text":"","code":"check_license(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/check_license.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the license of a package — check_license","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":"https://inbo.github.io/checklist/reference/check_license.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Check the license of a package — check_license","text":"functions checks DESCRIPTION mentions one standard licenses. LICENSE.md must match license. Use setup_package() add correct LICENSE.md package. Currently, following licenses allowed: GPL-3 MIT consider pull requests adding support open source licenses.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_lintr.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the packages for linters — check_lintr","title":"Check the packages for linters — check_lintr","text":"functions static code analysis. relies lintr::lint_package(). recommend activate code diagnostics RStudio help meeting requirements. can find menu Tools > Global options > Code > Diagnostics. Please look vignette(\"philosophy\") details rules.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_lintr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the packages for linters — check_lintr","text":"","code":"check_lintr(x = \".\", quiet = FALSE)"},{"path":"https://inbo.github.io/checklist/reference/check_lintr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the packages for linters — check_lintr","text":"x Either checklist object path source code. Defaults .. quiet Whether print check output checking.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the complete set of standardised tests on a package — check_package","title":"Run the complete set of standardised tests on a package — check_package","text":"convenience function runs packages related tests sequence. details section lists relevant functions. fixing problem, can quickly check solved running related check. still recommend run check_package() push GitHub. push functions indicate problems. catches problems sending code GitHub.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the complete set of standardised tests on a package — check_package","text":"","code":"check_package(   x = \".\",   fail = !interactive(),   pkgdown = interactive(),   quiet = FALSE )"},{"path":"https://inbo.github.io/checklist/reference/check_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the complete set of standardised tests on a package — check_package","text":"x Either checklist object path source code. Defaults .. fail function return error case problem? Defaults TRUE non-interactive session FALSE interactive session. pkgdown Test pkgdown website. Defaults TRUE interactive session FALSE non-interactive session. quiet Whether print check output checking.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Run the complete set of standardised tests on a package — check_package","text":"List checks order: check_cran() check_lintr() check_filename() check_description() check_documentation() check_codemeta()","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Run the required quality checks on a project — check_project","title":"Run the required quality checks on a project — check_project","text":"Set update required checks via setup_project().","code":""},{"path":"https://inbo.github.io/checklist/reference/check_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Run the required quality checks on a project — check_project","text":"","code":"check_project(x = \".\", fail = !interactive(), quiet = FALSE)"},{"path":"https://inbo.github.io/checklist/reference/check_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Run the required quality checks on a project — check_project","text":"x Either checklist object path source code. Defaults .. fail function return error case problem? Defaults TRUE non-interactive session FALSE interactive session. quiet Whether print check output checking.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Standardised test for an R source repository — check_source","title":"Standardised test for an R source repository — check_source","text":"convenience function runs test project .R .Rmd files. details section lists relevant functions. fixed problem, can speed things running related check. still recommend run check_source() push GitHub. push functions indicate problems. catches problems sending code GitHub.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standardised test for an R source repository — check_source","text":"","code":"check_source(x = \".\", fail = !interactive())"},{"path":"https://inbo.github.io/checklist/reference/check_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standardised test for an R source repository — check_source","text":"x Either checklist object path source code. Defaults .. fail function return error case problem? Defaults TRUE non-interactive session FALSE interactive session.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_source.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Standardised test for an R source repository — check_source","text":"List checks order: check_lintr() check_filename()","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/check_spelling.html","id":null,"dir":"Reference","previous_headings":"","what":"Spell check a package or project — check_spelling","title":"Spell check a package or project — check_spelling","text":"function checks default markdown (.md) Rmarkdown (.Rmd) file found within project. also checks R help file (.Rd) man folder. Use set_exceptions() method checklist object exclude files use different language. look vignette(\"spelling\", package = \"checklist\") details.","code":""},{"path":"https://inbo.github.io/checklist/reference/check_spelling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spell check a package or project — check_spelling","text":"","code":"check_spelling(x = \".\", quiet = FALSE)"},{"path":"https://inbo.github.io/checklist/reference/check_spelling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spell check a package or project — check_spelling","text":"x Either checklist object path source code. Defaults .. quiet Whether print check output checking.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":null,"dir":"Reference","previous_headings":"","what":"The checklist R6 class — checklist","title":"The checklist R6 class — checklist","text":"class contains checklist results.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"super-class","dir":"Reference","previous_headings":"","what":"Super class","title":"The checklist R6 class — checklist","text":"checklist::spelling -> checklist","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"public-fields","dir":"Reference","previous_headings":"","what":"Public fields","title":"The checklist R6 class — checklist","text":"package logical indicating whether source code refers package.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"The checklist R6 class — checklist","text":"get_checked vector checked topics. get_path path package. get_required vector names required checks. get_spelling Return issues found check_spelling() fail logical indicating required check fails. template list check list template.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"methods","dir":"Reference","previous_headings":"","what":"Methods","title":"The checklist R6 class — checklist","text":"checklist::spelling$set_default() checklist::spelling$set_exceptions() checklist::spelling$set_ignore() checklist::spelling$set_other()","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The checklist R6 class — checklist","text":"checklist$add_error() checklist$add_linter() checklist$add_motivation() checklist$add_notes() checklist$add_rcmdcheck() checklist$add_spelling() checklist$add_warnings() checklist$allowed() checklist$confirm_motivation() checklist$new() checklist$print() checklist$set_required() checklist$clone()","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-add-error-","dir":"Reference","previous_headings":"","what":"Method add_error()","title":"The checklist R6 class — checklist","text":"Add errors","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$add_error(errors, item, keep = TRUE)"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"errors vector errors. item item store errors. keep Keep old results","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-add-linter-","dir":"Reference","previous_headings":"","what":"Method add_linter()","title":"The checklist R6 class — checklist","text":"Add results lintr::lint_package()","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$add_linter(linter)"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"linter vector linter errors.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-add-motivation-","dir":"Reference","previous_headings":"","what":"Method add_motivation()","title":"The checklist R6 class — checklist","text":"Add motivation allowed issues.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$add_motivation(which = c(\"warnings\", \"notes\"))"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"kind issue add.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-add-notes-","dir":"Reference","previous_headings":"","what":"Method add_notes()","title":"The checklist R6 class — checklist","text":"Add notes","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$add_notes(notes, item)"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"notes vector notes. item item store notes.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-add-rcmdcheck-","dir":"Reference","previous_headings":"","what":"Method add_rcmdcheck()","title":"The checklist R6 class — checklist","text":"Add results rcmdcheck::rcmdcheck","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$add_rcmdcheck(errors, warnings, notes)"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"errors vector errors. warnings vector warning messages. notes vector notes.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-add-spelling-","dir":"Reference","previous_headings":"","what":"Method add_spelling()","title":"The checklist R6 class — checklist","text":"Add results check_spelling()","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$add_spelling(issues)"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"issues data.frame spell checking issues.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-add-warnings-","dir":"Reference","previous_headings":"","what":"Method add_warnings()","title":"The checklist R6 class — checklist","text":"Add warnings","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$add_warnings(warnings, item)"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-6","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"warnings vector warnings. item item store warnings.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-allowed-","dir":"Reference","previous_headings":"","what":"Method allowed()","title":"The checklist R6 class — checklist","text":"Add allowed warnings notes","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$allowed(   warnings = vector(mode = \"list\", length = 0),   notes = vector(mode = \"list\", length = 0) )"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-7","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"warnings vector allowed warning messages. Defaults empty list. notes vector allowed notes. Defaults empty list. package check list refers package. Defaults TRUE.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-confirm-motivation-","dir":"Reference","previous_headings":"","what":"Method confirm_motivation()","title":"The checklist R6 class — checklist","text":"Confirm current motivation allowed issues.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-8","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$confirm_motivation(which = c(\"warnings\", \"notes\"))"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-8","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"kind issue confirm.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The checklist R6 class — checklist","text":"Initialize new checklist object.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-9","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$new(x = \".\", language, package = TRUE)"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-9","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"x path root project. language default language spell checking. package package project?","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"The checklist R6 class — checklist","text":"Print checklist object. Add quiet = TRUE suppress printing.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-10","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$print(...)"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-10","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"... See description.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-set-required-","dir":"Reference","previous_headings":"","what":"Method set_required()","title":"The checklist R6 class — checklist","text":"set required checks","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-11","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$set_required(checks = character(0))"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-11","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"checks vector required checks","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"The checklist R6 class — checklist","text":"objects class cloneable method.","code":""},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"usage-12","dir":"Reference","previous_headings":"","what":"Usage","title":"The checklist R6 class — checklist","text":"","code":"checklist$clone(deep = FALSE)"},{"path":"https://inbo.github.io/checklist/reference/checklist.html","id":"arguments-12","dir":"Reference","previous_headings":"","what":"Arguments","title":"The checklist R6 class — checklist","text":"deep Whether make deep clone.","code":""},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":null,"dir":"Reference","previous_headings":"","what":"The citation_meta R6 class — citation_meta","title":"The citation_meta R6 class — citation_meta","text":"class contains citation information.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"The citation_meta R6 class — citation_meta","text":"get_errors Return errors get_meta Return meta data list get_notes Return notes get_type string indicating type source. get_path path project. get_warnings Return warnings","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The citation_meta R6 class — citation_meta","text":"citation_meta$new() citation_meta$print() citation_meta$clone()","code":""},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The citation_meta R6 class — citation_meta","text":"Initialize new citation_meta object.","code":""},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The citation_meta R6 class — citation_meta","text":"","code":"citation_meta$new(path = \".\")"},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The citation_meta R6 class — citation_meta","text":"path path root project.","code":""},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"The citation_meta R6 class — citation_meta","text":"Print citation_meta object.","code":""},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The citation_meta R6 class — citation_meta","text":"","code":"citation_meta$print(...)"},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The citation_meta R6 class — citation_meta","text":"... currently ignored.","code":""},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"The citation_meta R6 class — citation_meta","text":"objects class cloneable method.","code":""},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The citation_meta R6 class — citation_meta","text":"","code":"citation_meta$clone(deep = FALSE)"},{"path":"https://inbo.github.io/checklist/reference/citation_meta.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The citation_meta R6 class — citation_meta","text":"deep Whether make deep clone.","code":""},{"path":"https://inbo.github.io/checklist/reference/clean_git.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean the git repository — clean_git","title":"Clean the git repository — clean_git","text":"update local branches behind counterpart origin. list local branches diverged counterpart origin. list local branches without counterpart origin diverged main branch. remove local branches without counterpart origin fully merged main branch. remove local copies origin branches deleted origin.","code":""},{"path":"https://inbo.github.io/checklist/reference/clean_git.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean the git repository — clean_git","text":"","code":"clean_git(repo = \".\", verbose = TRUE)"},{"path":"https://inbo.github.io/checklist/reference/clean_git.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean the git repository — clean_git","text":"repo path git repository. directory repository, parent directories considered (see git_find). disable search, provide filepath protected (). using parameter, always explicitly call name (.e. repo = ) future versions gert may additional parameters. verbose display progress info downloading","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/create_draft_pr.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a draft pull request — create_draft_pr","title":"Create a draft pull request — create_draft_pr","text":"function creates draft pull request current version package.","code":""},{"path":"https://inbo.github.io/checklist/reference/create_draft_pr.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a draft pull request — create_draft_pr","text":"","code":"create_draft_pr(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/create_draft_pr.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a draft pull request — create_draft_pr","text":"x path package.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/create_hexsticker.html","id":null,"dir":"Reference","previous_headings":"","what":"Make hexagonal logo for package — create_hexsticker","title":"Make hexagonal logo for package — create_hexsticker","text":"function makes hexagonal logo INBO style provided package name.","code":""},{"path":"https://inbo.github.io/checklist/reference/create_hexsticker.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make hexagonal logo for package — create_hexsticker","text":"","code":"create_hexsticker(   package_name,   filename = path(\"man\", \"figures\", \"logo.svg\"),   icon,   x = 0,   y = 0,   scale = 1 )"},{"path":"https://inbo.github.io/checklist/reference/create_hexsticker.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make hexagonal logo for package — create_hexsticker","text":"package_name package name mentioned hexagonal sticker. filename filename save sticker. icon optional filename  .svg file icon. x number pixels move icon right. Use negative numbers move icon left. y number pixels move icon bottom. Use negative numbers move icon top. scale Scales icon.","code":""},{"path":"https://inbo.github.io/checklist/reference/create_hexsticker.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Make hexagonal logo for package — create_hexsticker","text":"figure saved working directory provided path.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/create_hexsticker.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make hexagonal logo for package — create_hexsticker","text":"","code":"if (FALSE) { # \\dontrun{ # make tempfile to save logo (or just use (path and) filename) #' output <- tempfile(pattern = \"hexsticker\", fileext = \".svg\") create_hexsticker(\"checklist\", filename = output) } # }"},{"path":"https://inbo.github.io/checklist/reference/create_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Create an R package according to INBO requirements — create_package","title":"Create an R package according to INBO requirements — create_package","text":"Creates package template new folder. Use function want start new package. Please READ vignette(\"getting_started\") running function.","code":""},{"path":"https://inbo.github.io/checklist/reference/create_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create an R package according to INBO requirements — create_package","text":"","code":"create_package(   package,   path = \".\",   title,   description,   keywords,   language = \"en-GB\",   license = c(\"GPL-3\", \"MIT\"),   communities = character(0),   maintainer )"},{"path":"https://inbo.github.io/checklist/reference/create_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create an R package according to INBO requirements — create_package","text":"package Name new package. path create package directory. title single sentence title package. description single paragraph describing package. keywords vector keywords. language Language project xx-YY format. xx two letter code language. YY two letter code language variant. E.g. en-GB British English, en-US American English, nl-Belgian Dutch. license type license used? Choice GPL-3 MIT. Default GPL-3. communities optional vector Zenodo community id's. maintainer missing, function interactively lets add maintainer authors. Otherwise must output utils::person().","code":""},{"path":"https://inbo.github.io/checklist/reference/create_package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create an R package according to INBO requirements — create_package","text":"get checklist setup: minimal folder structure files required R package using INBO guidelines GPL-3 MIT license. RStudio project file local git repository initial NEWS.md file template README.Rmd set-automated checks releases package using GitHub Actions. code conduct contributing guidelines. set-pkgdown website using INBO corporate identity.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/create_package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create an R package according to INBO requirements — create_package","text":"","code":"# maintainer in `utils::person()` format maintainer <- person(   given = \"Thierry\",   family = \"Onkelinx\",   role = c(\"aut\", \"cre\"),   email = \"thierry.onkelinx@inbo.be\",   comment = c(ORCID = \"0000-0001-8804-4216\") )  # creating the package path <- tempfile() dir.create(path) create_package(   path = path, package = \"packagename\", title = \"package title\",   description = \"A short description.\", maintainer = maintainer,   language = \"en-GB\", license = \"GPL-3\", keywords = \"keyword\" ) #> package created at `/tmp/RtmpyCRJZG/file32fc27190984/packagename`"},{"path":"https://inbo.github.io/checklist/reference/create_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Initialise a new R project — create_project","title":"Initialise a new R project — create_project","text":"function creates new RStudio project checklist functionality.","code":""},{"path":"https://inbo.github.io/checklist/reference/create_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initialise a new R project — create_project","text":"","code":"create_project(path, project)"},{"path":"https://inbo.github.io/checklist/reference/create_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initialise a new R project — create_project","text":"path folder create project folder. project name project.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/custom_dictionary.html","id":null,"dir":"Reference","previous_headings":"","what":"Add words to custom dictionaries — custom_dictionary","title":"Add words to custom dictionaries — custom_dictionary","text":"Add words custom dictionaries","code":""},{"path":"https://inbo.github.io/checklist/reference/custom_dictionary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add words to custom dictionaries — custom_dictionary","text":"","code":"custom_dictionary(issues)"},{"path":"https://inbo.github.io/checklist/reference/custom_dictionary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add words to custom dictionaries — custom_dictionary","text":"issues output check_spelling().","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/default_organisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Write default organisation settings — default_organisation","title":"Write default organisation settings — default_organisation","text":"Store default organisation rules. First run org <- organisation$new() appropriate argument. Next can store configuration default_organisation(org).","code":""},{"path":"https://inbo.github.io/checklist/reference/default_organisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write default organisation settings — default_organisation","text":"","code":"default_organisation(org = organisation$new())"},{"path":"https://inbo.github.io/checklist/reference/default_organisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write default organisation settings — default_organisation","text":"org organisation object. Create organisation$new().","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/defunct.html","id":null,"dir":"Reference","previous_headings":"","what":"Defunct functions — orcid2person","title":"Defunct functions — orcid2person","text":"Defunct functions","code":""},{"path":"https://inbo.github.io/checklist/reference/defunct.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Defunct functions — orcid2person","text":"","code":"orcid2person()"},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/execshell.html","id":null,"dir":"Reference","previous_headings":"","what":"Pass command lines to a shell — execshell","title":"Pass command lines to a shell — execshell","text":"Cross-platform function pass command shell, using either base::system() (Windows-) base::shell(), depending operating system.","code":""},{"path":"https://inbo.github.io/checklist/reference/execshell.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pass command lines to a shell — execshell","text":"","code":"execshell(commandstring, intern = FALSE, path = \".\", ...)"},{"path":"https://inbo.github.io/checklist/reference/execshell.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pass command lines to a shell — execshell","text":"commandstring system command invoked, string. Multiple commands can combined single string, e.g. multiline string. intern logical (NA) indicates whether     capture output command R character vector. path path command string needs executed ... arguments passed base::system() base::shell().","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/is_repository.html","id":null,"dir":"Reference","previous_headings":"","what":"Determine if a directory is in a git repository — is_repository","title":"Determine if a directory is in a git repository — is_repository","text":"path arguments specifies directory start search git repository. git repository , parent directory consulted, parent's parent, .","code":""},{"path":"https://inbo.github.io/checklist/reference/is_repository.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determine if a directory is in a git repository — is_repository","text":"","code":"is_repository(path = \".\")"},{"path":"https://inbo.github.io/checklist/reference/is_repository.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determine if a directory is in a git repository — is_repository","text":"path location git repository, see details.","code":""},{"path":"https://inbo.github.io/checklist/reference/is_repository.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determine if a directory is in a git repository — is_repository","text":"TRUE directory git repository else FALSE","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/is_workdir_clean.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if the current working directory of a repo is clean — is_workdir_clean","title":"Check if the current working directory of a repo is clean — is_workdir_clean","text":"clean working directory staged, unstaged untracked files.","code":""},{"path":"https://inbo.github.io/checklist/reference/is_workdir_clean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if the current working directory of a repo is clean — is_workdir_clean","text":"","code":"is_workdir_clean(repo)"},{"path":"https://inbo.github.io/checklist/reference/is_workdir_clean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if the current working directory of a repo is clean — is_workdir_clean","text":"repo path git repository. directory repository, parent directories considered (see git_find). disable search, provide filepath protected (). using parameter, always explicitly call name (.e. repo = ) future versions gert may additional parameters.","code":""},{"path":"https://inbo.github.io/checklist/reference/is_workdir_clean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if the current working directory of a repo is clean — is_workdir_clean","text":"TRUE staged, unstaged untracked files. Otherwise FALSE","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/menu_first.html","id":null,"dir":"Reference","previous_headings":"","what":"Improved version of menu() — menu_first","title":"Improved version of menu() — menu_first","text":"Improved version menu()","code":""},{"path":"https://inbo.github.io/checklist/reference/menu_first.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Improved version of menu() — menu_first","text":"","code":"menu_first(choices, graphics = FALSE, title = NULL)"},{"path":"https://inbo.github.io/checklist/reference/menu_first.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Improved version of menu() — menu_first","text":"choices character vector choices graphics logical indicating whether graphics menu     used available. title character string used title menu.     NULL also accepted.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/new_branch.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a new branch after cleaning the repo — new_branch","title":"Create a new branch after cleaning the repo — new_branch","text":"functions first runs clean_git(). creates new branch (updated) main branch.","code":""},{"path":"https://inbo.github.io/checklist/reference/new_branch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a new branch after cleaning the repo — new_branch","text":"","code":"new_branch(branch, verbose = TRUE, checkout = TRUE, repo = \".\")"},{"path":"https://inbo.github.io/checklist/reference/new_branch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a new branch after cleaning the repo — new_branch","text":"branch name branch check verbose display progress info downloading checkout move HEAD newly created branch repo path git repository. directory repository, parent directories considered (see git_find). disable search, provide filepath protected (). using parameter, always explicitly call name (.e. repo = ) future versions gert may additional parameters.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":null,"dir":"Reference","previous_headings":"","what":"The organisation R6 class — organisation","title":"The organisation R6 class — organisation","text":"class organisation defaults","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"The organisation R6 class — organisation","text":"as_person default organisation funder rightsholder. get_community default organisation Zenodo communities. get_email default organisation email. get_funder default funder. get_github default GitHub organisation domain. get_organisation organisation requirements. get_rightsholder default rightsholder. template list check list template.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The organisation R6 class — organisation","text":"organisation$new() organisation$print() organisation$clone()","code":""},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The organisation R6 class — organisation","text":"Initialize new organisation object.","code":""},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The organisation R6 class — organisation","text":"","code":"organisation$new(...)"},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The organisation R6 class — organisation","text":"... organisation settings. See details.","code":""},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"The organisation R6 class — organisation","text":"github: name github organisation. Set NA_character_ case want mandatory github organisation. community: mandatory Zenodo community. Defaults \"inbo\". Set NA_character_ case want mandatory community. email: e-mail organisation. Defaults \"info@inbo.\". Set NA_character_ case want organisation e-mail. funder: funder. Defaults \"Research Institute Nature Forest (INBO)\". Set NA_character_ case want set funder. rightsholder: rightsholder. Defaults \"Research Institute Nature Forest (INBO)\". Set NA_character_ case want set rightsholder. organisation: named list one organisation default rules. names element must match e-mail domain name organisation. Every element named list containing affiliation orcid. affiliation character vector approved organisation names one languages. orcid = TRUE indicated mandatory ORCiD every member. Use empty list case want set .","code":""},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"The organisation R6 class — organisation","text":"Print organisation object.","code":""},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The organisation R6 class — organisation","text":"","code":"organisation$print(...)"},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The organisation R6 class — organisation","text":"... currently ignored.","code":""},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"The organisation R6 class — organisation","text":"objects class cloneable method.","code":""},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The organisation R6 class — organisation","text":"","code":"organisation$clone(deep = FALSE)"},{"path":"https://inbo.github.io/checklist/reference/organisation.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The organisation R6 class — organisation","text":"deep Whether make deep clone.","code":""},{"path":"https://inbo.github.io/checklist/reference/prepare_ghpages.html","id":null,"dir":"Reference","previous_headings":"","what":"Prepare a gh-pages branch with a place holder page — prepare_ghpages","title":"Prepare a gh-pages branch with a place holder page — prepare_ghpages","text":"Prepare gh-pages branch place holder page","code":""},{"path":"https://inbo.github.io/checklist/reference/prepare_ghpages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Prepare a gh-pages branch with a place holder page — prepare_ghpages","text":"","code":"prepare_ghpages(x = \".\", verbose = TRUE)"},{"path":"https://inbo.github.io/checklist/reference/prepare_ghpages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Prepare a gh-pages branch with a place holder page — prepare_ghpages","text":"x Either checklist object path source code. Defaults .. verbose display progress info downloading","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/print.checklist_spelling.html","id":null,"dir":"Reference","previous_headings":"","what":"Display a checklist_spelling summary — print.checklist_spelling","title":"Display a checklist_spelling summary — print.checklist_spelling","text":"Display checklist_spelling summary","code":""},{"path":"https://inbo.github.io/checklist/reference/print.checklist_spelling.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Display a checklist_spelling summary — print.checklist_spelling","text":"","code":"# S3 method for class 'checklist_spelling' print(x, ...)"},{"path":"https://inbo.github.io/checklist/reference/print.checklist_spelling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Display a checklist_spelling summary — print.checklist_spelling","text":"x checklist_spelling object ... currently ignored","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/read_checklist.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the check list file from a package — read_checklist","title":"Read the check list file from a package — read_checklist","text":"checklist package stores configuration information checklist.yml file root project. function reads configuration. mainly used functions inside package. checklist.yml file found path, function walks upwards directory structure finds file. function returns error reaches root disk without finding checklist.yml file.","code":""},{"path":"https://inbo.github.io/checklist/reference/read_checklist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the check list file from a package — read_checklist","text":"","code":"read_checklist(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/read_checklist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the check list file from a package — read_checklist","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":"https://inbo.github.io/checklist/reference/read_checklist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the check list file from a package — read_checklist","text":"checklist object.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/read_organisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Read the organisation file — read_organisation","title":"Read the organisation file — read_organisation","text":"checklist package stores organisation information organisation.yml file root project.","code":""},{"path":"https://inbo.github.io/checklist/reference/read_organisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read the organisation file — read_organisation","text":"","code":"read_organisation(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/read_organisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read the organisation file — read_organisation","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":"https://inbo.github.io/checklist/reference/read_organisation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read the organisation file — read_organisation","text":"organisation object.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/set_license.html","id":null,"dir":"Reference","previous_headings":"","what":"Set the proper license — set_license","title":"Set the proper license — set_license","text":"Set proper license","code":""},{"path":"https://inbo.github.io/checklist/reference/set_license.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set the proper license — set_license","text":"","code":"set_license(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/set_license.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set the proper license — set_license","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/set_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Set a New Tag — set_tag","title":"Set a New Tag — set_tag","text":"function part GitHub Action. Therefore works run GitHub Action main master branch. Otherwise return message. sets new tag current commit using related entry NEWS.md message. tag turn release.","code":""},{"path":"https://inbo.github.io/checklist/reference/set_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set a New Tag — set_tag","text":"","code":"set_tag(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/set_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set a New Tag — set_tag","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/setup_package.html","id":null,"dir":"Reference","previous_headings":"","what":"Add or update the checklist infrastructure to an existing package — setup_package","title":"Add or update the checklist infrastructure to an existing package — setup_package","text":"Use function existing package want use checklist functionality. Please keep mind checklist opinionated list checks. might require breaking changes package. Please READ vignette(\"getting_started\") running function.","code":""},{"path":"https://inbo.github.io/checklist/reference/setup_package.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add or update the checklist infrastructure to an existing package — setup_package","text":"","code":"setup_package(path = \".\", license = c(\"GPL-3\", \"MIT\"))"},{"path":"https://inbo.github.io/checklist/reference/setup_package.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add or update the checklist infrastructure to an existing package — setup_package","text":"path path package. Defaults \".\". license type license used? Choice GPL-3 MIT. Default GPL-3.","code":""},{"path":"https://inbo.github.io/checklist/reference/setup_package.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Add or update the checklist infrastructure to an existing package — setup_package","text":"get checklist setup: minimal folder structure files required R package using INBO guidelines GPL-3 MIT license. RStudio project file local git repository initial NEWS.md file template README.Rmd set-automated checks releases package using GitHub Actions. code conduct contributing guidelines. set-pkgdown website using INBO corporate identity.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/setup_project.html","id":null,"dir":"Reference","previous_headings":"","what":"Set-up checklist on an existing R project — setup_project","title":"Set-up checklist on an existing R project — setup_project","text":"Use function set-change checklist infrastructure existing project. function interactively asks questions set-required checks.","code":""},{"path":"https://inbo.github.io/checklist/reference/setup_project.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set-up checklist on an existing R project — setup_project","text":"","code":"setup_project(path = \".\")"},{"path":"https://inbo.github.io/checklist/reference/setup_project.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set-up checklist on an existing R project — setup_project","text":"path project root folder","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/setup_source.html","id":null,"dir":"Reference","previous_headings":"","what":"Add or update the checklist infrastructure to a repository with source files. — setup_source","title":"Add or update the checklist infrastructure to a repository with source files. — setup_source","text":"adds required GitHub workflows run check_source() automatically whenever push commits GitHub. also adds CC-4.0 license file, CODE_OF_CONDUCT.md checklist configuration file (checklist.yml).","code":""},{"path":"https://inbo.github.io/checklist/reference/setup_source.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add or update the checklist infrastructure to a repository with source files. — setup_source","text":"","code":"setup_source(path = \".\", language = \"en-GB\")"},{"path":"https://inbo.github.io/checklist/reference/setup_source.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add or update the checklist infrastructure to a repository with source files. — setup_source","text":"path path project. Defaults \".\". language Language project xx-YY format. xx two letter code language. YY two letter code language variant. E.g. en-GB British English, en-US American English, nl-Belgian Dutch.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":null,"dir":"Reference","previous_headings":"","what":"The spelling R6 class — spelling","title":"The spelling R6 class — spelling","text":"class configuration spell checking","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"active-bindings","dir":"Reference","previous_headings":"","what":"Active bindings","title":"The spelling R6 class — spelling","text":"default default language project. get_md markdown files within project. get_r R files within project. get_rd Rd files within project. settings list current spell checking settings.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"The spelling R6 class — spelling","text":"spelling$new() spelling$print() spelling$set_default() spelling$set_exceptions() spelling$set_ignore() spelling$set_other() spelling$clone()","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"The spelling R6 class — spelling","text":"Initialize new spelling object.","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The spelling R6 class — spelling","text":"","code":"spelling$new(language, base_path = \".\")"},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The spelling R6 class — spelling","text":"language default language. base_path base path project","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"The spelling R6 class — spelling","text":"Print spelling object.","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"The spelling R6 class — spelling","text":"","code":"spelling$print(...)"},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"The spelling R6 class — spelling","text":"... currently ignored.","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"method-set-default-","dir":"Reference","previous_headings":"","what":"Method set_default()","title":"The spelling R6 class — spelling","text":"Define files ignore spell check different language.","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"The spelling R6 class — spelling","text":"","code":"spelling$set_default(language)"},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"The spelling R6 class — spelling","text":"language language.","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"method-set-exceptions-","dir":"Reference","previous_headings":"","what":"Method set_exceptions()","title":"The spelling R6 class — spelling","text":"Define files ignore spell check different language.","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"The spelling R6 class — spelling","text":"","code":"spelling$set_exceptions()"},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"method-set-ignore-","dir":"Reference","previous_headings":"","what":"Method set_ignore()","title":"The spelling R6 class — spelling","text":"Manually set ignore vector. use known .","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"The spelling R6 class — spelling","text":"","code":"spelling$set_ignore(ignore)"},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"The spelling R6 class — spelling","text":"ignore character vector ignore file patterns.","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"method-set-other-","dir":"Reference","previous_headings":"","what":"Method set_other()","title":"The spelling R6 class — spelling","text":"Manually set list. use known .","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"The spelling R6 class — spelling","text":"","code":"spelling$set_other(other)"},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"The spelling R6 class — spelling","text":"list file patterns per additional language.","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"The spelling R6 class — spelling","text":"objects class cloneable method.","code":""},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"The spelling R6 class — spelling","text":"","code":"spelling$clone(deep = FALSE)"},{"path":"https://inbo.github.io/checklist/reference/spelling.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"The spelling R6 class — spelling","text":"deep Whether make deep clone.","code":""},{"path":"https://inbo.github.io/checklist/reference/store_authors.html","id":null,"dir":"Reference","previous_headings":"","what":"Store author details for later usage — store_authors","title":"Store author details for later usage — store_authors","text":"Store author details later usage","code":""},{"path":"https://inbo.github.io/checklist/reference/store_authors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Store author details for later usage — store_authors","text":"","code":"store_authors(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/store_authors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Store author details for later usage — store_authors","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/tidy_desc.html","id":null,"dir":"Reference","previous_headings":"","what":"Make your DESCRIPTION tidy — tidy_desc","title":"Make your DESCRIPTION tidy — tidy_desc","text":"tidy DESCRIPTION uses strict formatting order key-value pairs. function reads current DESCRIPTION overwrites tidy version.","code":""},{"path":"https://inbo.github.io/checklist/reference/tidy_desc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make your DESCRIPTION tidy — tidy_desc","text":"","code":"tidy_desc(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/tidy_desc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make your DESCRIPTION tidy — tidy_desc","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/update_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or update the citation files — update_citation","title":"Create or update the citation files — update_citation","text":"function extracts citation meta data project. checks required meta data. Upon success, writes several files.","code":""},{"path":"https://inbo.github.io/checklist/reference/update_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or update the citation files — update_citation","text":"","code":"update_citation(x = \".\", quiet = FALSE)"},{"path":"https://inbo.github.io/checklist/reference/update_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or update the citation files — update_citation","text":"x Either checklist object path source code. Defaults .. quiet Whether print check output checking.","code":""},{"path":"https://inbo.github.io/checklist/reference/update_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or update the citation files — update_citation","text":"invisible checklist object.","code":""},{"path":"https://inbo.github.io/checklist/reference/update_citation.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create or update the citation files — update_citation","text":".zenodo.json contains citation information format Zenodo requires. CITATION.cff provides citation information format GitHub requires. inst/CITATION provides citation information format R packages require. relevant packages.","code":""},{"path":"https://inbo.github.io/checklist/reference/update_citation.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Create or update the citation files — update_citation","text":"Source citation meta data: package: DESCRIPTION project: README.md want add information inst/CITATION file, add file outside # begin checklist entry # end checklist entry.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/use_author.html","id":null,"dir":"Reference","previous_headings":"","what":"Which author to use — use_author","title":"Which author to use — use_author","text":"Reuse existing author information add new author. Allows update existing author information.","code":""},{"path":"https://inbo.github.io/checklist/reference/use_author.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Which author to use — use_author","text":"","code":"use_author(email)"},{"path":"https://inbo.github.io/checklist/reference/use_author.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Which author to use — use_author","text":"email optional email address. given matches single person, function immediately returns information person.","code":""},{"path":"https://inbo.github.io/checklist/reference/use_author.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Which author to use — use_author","text":"data.frame author information.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/validate_email.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if a vector contains valid email — validate_email","title":"Check if a vector contains valid email — validate_email","text":"checks format text, email address exists.","code":""},{"path":"https://inbo.github.io/checklist/reference/validate_email.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if a vector contains valid email — validate_email","text":"","code":"validate_email(email)"},{"path":"https://inbo.github.io/checklist/reference/validate_email.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if a vector contains valid email — validate_email","text":"email vector email addresses.","code":""},{"path":"https://inbo.github.io/checklist/reference/validate_email.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if a vector contains valid email — validate_email","text":"logical vector.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/validate_orcid.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate the structure of an ORCID id — validate_orcid","title":"Validate the structure of an ORCID id — validate_orcid","text":"Checks whether ORCID proper format checksum.","code":""},{"path":"https://inbo.github.io/checklist/reference/validate_orcid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate the structure of an ORCID id — validate_orcid","text":"","code":"validate_orcid(orcid)"},{"path":"https://inbo.github.io/checklist/reference/validate_orcid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate the structure of an ORCID id — validate_orcid","text":"orcid vector ORCID","code":""},{"path":"https://inbo.github.io/checklist/reference/validate_orcid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Validate the structure of an ORCID id — validate_orcid","text":"logical vector length input vector.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/write_checklist.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a check list with allowed issues in the source code — write_checklist","title":"Write a check list with allowed issues in the source code — write_checklist","text":"checklist stores configuration checklist.yml file. create_package(), setup_package() setup_source() generate default file. need allow warnings notes, need update configuration.","code":""},{"path":"https://inbo.github.io/checklist/reference/write_checklist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a check list with allowed issues in the source code — write_checklist","text":"","code":"write_checklist(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/write_checklist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a check list with allowed issues in the source code — write_checklist","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":"https://inbo.github.io/checklist/reference/write_checklist.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Write a check list with allowed issues in the source code — write_checklist","text":"First run x <- checklist::check_package() x <- checklist::check_source(). commands run checks store checklist object variable x. Next can store configuration checklist::write_checklist(x). first list existing allowed warnings notes. every one , choose whether want keep . Next, function presents every new warning note may allow . choose allow warning note, must provide motivation. Please provide sensible motivation. Keep mind checklist.yml stores motivations plain text, visible users. use yesno() function make sure carefully read questions.","code":""},{"path":"https://inbo.github.io/checklist/reference/write_checklist.html","id":"caveat","dir":"Reference","previous_headings":"","what":"Caveat","title":"Write a check list with allowed issues in the source code — write_checklist","text":"allow warning note, warning note must appear. Otherwise get \"missing warning\" \"missing note\" error. fix allowed warning note, need rerun checklist::write_checklist(x) remove old version. can solve warning note, solve rather allow . allow warning note case generic \"problem\" solve. best example checking CRAN incoming feasibility ... NOTE New submission appears checking package CRAN. allowed note long package CRAN. permanently package intended CRAN. allow warning note fix issue specific machine. result error checking package machine (e.g. GitHub actions).","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/write_citation_cff.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a CITATION.cff file — write_citation_cff","title":"Write a CITATION.cff file — write_citation_cff","text":"file format contains citation information. supported GitHub, Zenodo Zotero. function super-seeded update_citation().","code":""},{"path":"https://inbo.github.io/checklist/reference/write_citation_cff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a CITATION.cff file — write_citation_cff","text":"","code":"write_citation_cff(x = \".\", roles)"},{"path":"https://inbo.github.io/checklist/reference/write_citation_cff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a CITATION.cff file — write_citation_cff","text":"x Either checklist object path source code. Defaults .. roles longer used.","code":""},{"path":"https://inbo.github.io/checklist/reference/write_citation_cff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a CITATION.cff file — write_citation_cff","text":"invisible checklist object.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/write_organisation.html","id":null,"dir":"Reference","previous_headings":"","what":"Write organisation settings — write_organisation","title":"Write organisation settings — write_organisation","text":"Store organisation rules organisation.yml file. First run org <- organisation$new() appropriate argument. Next can store configuration write_organisation(org).","code":""},{"path":"https://inbo.github.io/checklist/reference/write_organisation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write organisation settings — write_organisation","text":"","code":"write_organisation(org, x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/write_organisation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write organisation settings — write_organisation","text":"org organisation object. Create organisation$new(). x Either checklist object path source code. Defaults ..","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/write_zenodo_json.html","id":null,"dir":"Reference","previous_headings":"","what":"Write a .zenodo.json file — write_zenodo_json","title":"Write a .zenodo.json file — write_zenodo_json","text":"Zenodo uses .zenodo.json file define citation information. See Zenodo developers website information.","code":""},{"path":"https://inbo.github.io/checklist/reference/write_zenodo_json.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Write a .zenodo.json file — write_zenodo_json","text":"","code":"write_zenodo_json(x = \".\")"},{"path":"https://inbo.github.io/checklist/reference/write_zenodo_json.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Write a .zenodo.json file — write_zenodo_json","text":"x Either checklist object path source code. Defaults ..","code":""},{"path":"https://inbo.github.io/checklist/reference/write_zenodo_json.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Write a .zenodo.json file — write_zenodo_json","text":"invisible checklist object.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/yesno.html","id":null,"dir":"Reference","previous_headings":"","what":"A function that asks a yes or no question to the user — yesno","title":"A function that asks a yes or no question to the user — yesno","text":"function asks yes question user","code":""},{"path":"https://inbo.github.io/checklist/reference/yesno.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"A function that asks a yes or no question to the user — yesno","text":"","code":"yesno(...)"},{"path":"https://inbo.github.io/checklist/reference/yesno.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"A function that asks a yes or no question to the user — yesno","text":"... Currently ignored","code":""},{"path":"https://inbo.github.io/checklist/reference/yesno.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"A function that asks a yes or no question to the user — yesno","text":"logical TRUE implies \"yes\" answer user.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/reference/yesno.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"A function that asks a yes or no question to the user — yesno","text":"Hadley Wickham Hadley@Rstudio.com Largely based devtools:::yesno(). user gets three options random order: 2 \"\", 1 \"yes\". wording \"yes\" \"\" random well. forces user carefully read question.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-042","dir":"Changelog","previous_headings":"","what":"checklist 0.4.2","title":"checklist 0.4.2","text":"check_lintr() checks missing dependencies. Checking projects GitHub Actions try install missing dependencies. check_lintr() includes lintr::indentation_linter(). Increase time-check_cran(). Docker image installs latest version TeXLive. Docker image installs missing packages fly. check_filename() ignores symbolic links. path git repository, check_filename() check_folder() check files directories version control. check_folder() allows quarto specific _extensions _files folders. citation_meta() now supports quarto documents. Improved support quarto documents check_spelling(). add_badges() can create version badge. create_draft_pr() returns URL draft pull request. Fix bug use_author() (#149).","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-041","dir":"Changelog","previous_headings":"","what":"checklist 0.4.1","title":"checklist 0.4.1","text":"Add new function create_draft_pr(). Escape quotes CITATION file. Install packages Dockerfile using pak. check_description() doesn’t require funder set organisation. check_document() handles unexported functions documentation. check_lintr() requires cyclocomp package. Improved extraction citation information. Fix false positive check_spelling() requested #147. Improve author2df().","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-040","dir":"Changelog","previous_headings":"","what":"checklist 0.4.0","title":"checklist 0.4.0","text":"Updated README.md. Improved support organisation. Add set_license(). check_filename() allows CODEOWNERS file. checklist summary displays unstaged git changes. GitHub Action packages installs roxygen2 version listed DESCRIPTION package checks.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-036","dir":"Changelog","previous_headings":"","what":"checklist 0.3.6","title":"checklist 0.3.6","text":"Add organisation class store organisation rules different Research Institute Nature Forest (INBO). See vignette(\"organisation\", package = \"checklist\") information. output check shows git diff (#77). add_badges() helps add badges README. Put double quotes around title abstract fields CITATION.cff. check_documentation() handles assignment functions re-exported functions correctly. check_lintr() ignores renv subdirectories (#118). Update zen4R version 0.10 reflect Zenodo API changes (#125). update_citation() longer introduces new lines (#124) handles single quotes titles (#115). can add multiple affiliations per author (#123). Separate semi-colon (;) DESCRIPTION yaml bookdown. Use multiple footnotes README.md. check_spelling() handles leading trailing backwards slashes (#107). check_cran() ignores irrelevant CRAN notes.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-035","dir":"Changelog","previous_headings":"","what":"checklist 0.3.5","title":"checklist 0.3.5","text":"Fix release GitHub Action. Bugfix update_citation() DESCRIPTION. check_spelling() handles Roxygen2 tags @aliases, @importMethodsFrom, @include, @keywords, @method, @name, @slot","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-034","dir":"Changelog","previous_headings":"","what":"checklist 0.3.4","title":"checklist 0.3.4","text":"check_spelling() ignores numbers. Ask GitHub organisation use create new project. Default equals organisation’s default. GitHub Action project allow install package prior checking project. Use case check_lintr() returns error global variables function require() package. Fix release GitHub Action.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-033","dir":"Changelog","previous_headings":"","what":"checklist 0.3.3","title":"checklist 0.3.3","text":"New organisation() class hold requirements organisation. time hard-coded Research Institute Nature Forest (INBO). Author affiliations must match one affiliations set organisation(). membership author determined e-mail affiliation. checked creating using author information updating citation information. read_checklist() looks checklist.yml parent folders can’t find provided path. validate_orcid() checks format checksum ORCID. Add vignette(\"folder\", package = \"checklist\").","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-032","dir":"Changelog","previous_headings":"","what":"checklist 0.3.2","title":"checklist 0.3.2","text":"citation_meta() gains support bookdown reports. Add bookdown_zenodo() first extracts citation metadata yaml header. cleans output folder renders required output formats. Finally uploads rendered files draft deposit Zenodo. setup_project() create_project() provides support renv.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-031","dir":"Changelog","previous_headings":"","what":"checklist 0.3.1","title":"checklist 0.3.1","text":"Fixes two bugs case MIT license chosen GitHub Actions now uses latest version checklist default checking packages projects.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-030","dir":"Changelog","previous_headings":"","what":"checklist 0.3.0","title":"checklist 0.3.0","text":"Improved create_project() setup_project() interactively guides user set-. Add vignette(\"getting_started_project\", package = \"checklist\"). Improved GitHub Actions. use built-GITHUB_TOKEN. user needs set CODECOV_TOKEN case package. Fixes note \"MIT\" license. Dockerimage uses dictionaries local installation. Add German dictionary? Spell check roxygen2 tags .R files. Don’t spell check .Rd files generated roxygen2. check_cran() ignores Days since last update note. check_documentation() yields warning find documented unexported function. Use @noRD tag case still want document function without exporting . Improved error messages check_news(). check_source() now deprecated. Use check_project() instead. Parse DESCRIPTION (package) README.md (project) extract citation information citation_meta object. export object different citation files. Standardise DESCRIPTION README.md accommodate citation information. DESCRIPTION gains checklist specific settings like Config/checklist/communities Config/checklist/keywords. Store author information reuse running create_package() create_project(). Add check_folder().","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-026","dir":"Changelog","previous_headings":"","what":"checklist 0.2.6","title":"checklist 0.2.6","text":"check_license() allows \"MIT\" license addition \"GPLv3\" packages","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-025","dir":"Changelog","previous_headings":"","what":"checklist 0.2.5","title":"checklist 0.2.5","text":"Add spell checking functionality. See vignette(\"spelling\", package = \"checklist\") details. checklist class stores required checks. Add setup_project() set-checklist existing project. function allows user choose checks required. Add check_project() run required checks project. Fix bug .zenodo.json one keyword present.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-024","dir":"Changelog","previous_headings":"","what":"checklist 0.2.4","title":"checklist 0.2.4","text":"check_description() enforces Language field valid [ISO 639-3 code] (https://en.wikipedia.org/wiki/Wikipedia:WikiProject_Languages/List_of_ISO_639-3_language_codes_(2019)). create_package() gains required language argument. adds required Language field DESCRIPTION. checklist objects gain update_keywords method. currently relevant packages. Usage: check package x <- check_package(). Add keywords x$update_keywords(c(\"keyword 1\", \"keyword 2\"). method adds keyword \"R package\" automatically. Store keywords write_checklist(x). Run update_citation() update citation files keywords. Use x$get_keywords() retrieve current keywords. Improve extraction DOI URL field. Allow .rda files inst folder package. Allow back ticks around package name NEWS.md. Add prepare_ghpages(). check_cran() ignores insufficient package version checking main branch. required checking R package current version equals latest version CRAN. Define explicit lintr options use.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-023","dir":"Changelog","previous_headings":"","what":"checklist 0.2.3","title":"checklist 0.2.3","text":"Add vignette(\"zenodo\") set integration Zenodo ORCID check_environment() makes sure required repository secrets set. check_package() performs check runs GitHub Action. missing repository secret results error. points vignette(\"getting_started\") indicates solve .","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"bugfix-0-2-3","dir":"Changelog","previous_headings":"","what":"Bugfix","title":"checklist 0.2.3","text":"Fix problem write_zenodo_json() produced .zenodo.json failed parse https://zenodo.org. write_zenodo_json() write_citation_cff() return checklist object pass update_citation().","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/news/index.html","id":"bugfix-0-2-2","dir":"Changelog","previous_headings":"","what":"Bugfix","title":"checklist 0.2.2","text":"Update URLS lintr.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/news/index.html","id":"bugfix-0-2-1","dir":"Changelog","previous_headings":"","what":"Bugfix","title":"checklist 0.2.1","text":"Fixed git diff used check_description() checking changes version number.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-020","dir":"Changelog","previous_headings":"","what":"checklist 0.2.0","title":"checklist 0.2.0","text":"Migrate ‘git2r’ gert communicate Git GitHub","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"bugfix-0-2-0","dir":"Changelog","previous_headings":"","what":"Bugfix","title":"checklist 0.2.0","text":"update_package() escapes double quotes abstract inst/CITATION. Docker image uses development version lintr check_source() handles projects renv GitHub Actions.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-0114","dir":"Changelog","previous_headings":"","what":"checklist 0.1.14","title":"checklist 0.1.14","text":"Improve error message changes CITATION need commit. (#64) create_package() can use maintainer information stored options. See usethis::use_description() set option. Add R universe badges README. Add write_zenodo_json() write_citation_cff(). Improve checklist GitHub Actions.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"bugfix-0-1-14","dir":"Changelog","previous_headings":"","what":"Bugfix","title":"checklist 0.1.14","text":"create_package() replaces package name place holder actual package name _pkgdown.yml.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-0113","dir":"Changelog","previous_headings":"","what":"checklist 0.1.13","title":"checklist 0.1.13","text":"new function update_citation() creates updates default citation inst/CITATION. INBO listed copyright holder, check_description() returns warning rather error. implies can motivate ignore via write_checklist(). (#33) Ignore .Rd files running check_filename(). (#59) check_filename() allows R/sysdata.rda. (#62)","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/news/index.html","id":"user-visible-changes-0-1-12","dir":"Changelog","previous_headings":"","what":"User visible changes","title":"checklist 0.1.12","text":"New new_branch() function start new branch recent version main branch. function run clean_git() creating new branch. check_package() runs pkgdown::build_site() default interactive sessions. function gains pkgdown argument turn behaviour.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"bugfixes-0-1-12","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"checklist 0.1.12","text":"check_filename() handles git repositories without commits. check_filename() ignores Rd files. use different naming convention generated roxygen2. clean_git() yields cleaner warnings. create_hexsticker() create target directory doesn’t exist.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"package-management-0-1-12","dir":"Changelog","previous_headings":"","what":"Package management","title":"checklist 0.1.12","text":"Add Docker build tests. check_filename() ignores docker-compose files.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-0111","dir":"Changelog","previous_headings":"","what":"checklist 0.1.11","title":"checklist 0.1.11","text":"Exclude renv packrat folders check_lintr(). GitHub Actions bash script packages checks main branch setting tags. Install codemetar GitHub available CRAN. Install devtools CRAN relevant version available CRAN. Add GitHub Action automatically remove artefacts. required keep used storage minimum. Checks different OS’s halt errors. importing codemetar GitHub results warning. Don’t install dependencies automatically Dockerfile. triggers error dependency listed Dockerfile. pkgdown ensures reference page lists exported functions. New pkgdown cascading style sheet. Bugfix clean_git().","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/news/index.html","id":"user-visible-changes-0-1-10","dir":"Changelog","previous_headings":"","what":"User visible changes","title":"checklist 0.1.10","text":"Bring local branches --date behind origin. Remove remote branches removed origin. Remove local branches fully merged main branch. Warn diverging branches. create_hexsticker() yields svg file instead png. user can optionally specify svg icon file add hexagonal sticker. Keep failed build artefacts 14 days (https://github.com/inbo/tutorials/issues/251).","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"bugfixes-0-1-10","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"checklist 0.1.10","text":"Avoid false positive linters .Rproj file put version control. check_files() considers files svg extensions graphical files. Minor bugfix entrypoint_package.sh.","code":""},{"path":[]},{"path":"https://inbo.github.io/checklist/news/index.html","id":"user-visible-changes-0-1-9","dir":"Changelog","previous_headings":"","what":"User visible changes","title":"checklist 0.1.9","text":"Many communities, GitHub wider Git community, considering renaming default branch name repository master. GitHub gradually renaming default branch repositories master main. Therefore checklist now allows main master branch default. case present, checklist uses main. Using master branch yields note. Hence must either main branch allow note write_checklist() (#44).","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"bugfixes-0-1-9","dir":"Changelog","previous_headings":"","what":"Bugfixes","title":"checklist 0.1.9","text":"Convert fancy single quotes neutral single quotes (#42). Fix check_description().","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-018","dir":"Changelog","previous_headings":"","what":"checklist 0.1.8","title":"checklist 0.1.8","text":"Create release pushing tag starting v. use GitHub Action create release instead R function. New function: setup_source() setup projects source files. Add auxiliary function create_hexsticker(). Allow data-raw folder Allow default GitHub file names Ignore font files csl files must follow rules graphics files URL BugReports DESCRIPTION GitHub Actions basic setup pkgdown. setup_package() updates .Rbuildignore basic setup pkgdown. Add documentation functions. vignette(\"getting_started\") vignette(\"philosophy\") Use Ubuntu 18.04 instead end life Ubuntu 16.04 checking package previous R release (#31).","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-017","dir":"Changelog","previous_headings":"","what":"checklist 0.1.7","title":"checklist 0.1.7","text":"Pushing master automatically create release, using set_tag(). Add Zenodo DOI badge README DOI URL DESCRIPTION. INBO set copyright holder funder. Every author ORCID. setup_package() adds required files pkgdown website (#21).","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-016","dir":"Changelog","previous_headings":"","what":"checklist 0.1.6","title":"checklist 0.1.6","text":"Drop codemeta.json file. requires constant updating contains package file size.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-015","dir":"Changelog","previous_headings":"","what":"checklist 0.1.5","title":"checklist 0.1.5","text":"check_documentation() allows NEWS.md level 2 headings (##) single line subitems (*). doesn’t count URLs determining line line. allows lines longer 80 characters due long URLs. Allows files ending -package.Rd. Allows json yml files starting dot followed letters. Allows filename cran-comment.md WORDLIST. Allows man-roxygen folder name. Requires underscore (_) separator non-graphics files. Requires dash (-) separator graphics files. Basename separator issue warnings instead errors. can allow warnings via write_checklist(). Fix deploying pkgdown website release. Package require codemeta.json written codemetar::write_codemeta. Suggestions codemetar improve package become checklist notes. set_tag() fails detached HEAD state. set_tag() creates release tag created GitHub. check_cran() ignores system time check world clock API available. check_license() verifies license information package. check included via check_description() check_package().","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-014","dir":"Changelog","previous_headings":"","what":"checklist 0.1.4","title":"checklist 0.1.4","text":"set_tag() skips tag already exists. create_package() sets code conduct contributing guidelines. create_package() sets LICENSE.md. Run pkgdown::build_site() check_pkg GitHub action. Deploy pkgdown website gp-pages branch pushing master check_pkg GitHub action.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-013","dir":"Changelog","previous_headings":"","what":"checklist 0.1.3","title":"checklist 0.1.3","text":"Add validate_email() check valid email addresses. Add orcid2person() converts valid ORCID person object. Add create_package() prepare RStudio project empty package.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-012","dir":"Changelog","previous_headings":"","what":"checklist 0.1.2","title":"checklist 0.1.2","text":"Correctly check package version master branch rebasing. Updating master branch set tag current version.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-011","dir":"Changelog","previous_headings":"","what":"checklist 0.1.1","title":"checklist 0.1.1","text":"Added NEWS.md file track changes package. Added README.Rmd file installation instructions. Rework checklist_template() write_checklist(). Add check_description(). Add check_documentation(). Add check_filename(). Add check_source(). check_lintr() also works source code repositories. Activate GitHub action inbo/check_package.","code":""},{"path":"https://inbo.github.io/checklist/news/index.html","id":"checklist-010","dir":"Changelog","previous_headings":"","what":"checklist 0.1.0","title":"checklist 0.1.0","text":"Initial version. Create checklist R6 class. Add check_cran(). Add check_lintr(). Add check_package(). Add read_checklist(). Add checklist_template(). Add Dockerimage GitHub actions.","code":""}]
