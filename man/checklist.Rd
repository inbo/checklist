% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/checklist_class.R
\name{checklist}
\alias{checklist}
\title{The checklist R6 class}
\description{
A class which contains all checklist results.
}
\seealso{
Other class: 
\code{\link{spelling}}
}
\concept{class}
\section{Super class}{
\code{\link[checklist:spelling]{checklist::spelling}} -> \code{checklist}
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{package}}{A logical indicating whether the source code refers to a
package.}
}
\if{html}{\out{</div>}}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{get_checked}}{A vector with checked topics.}

\item{\code{get_keywords}}{A vector with keywords.}

\item{\code{get_path}}{The path to the package.}

\item{\code{get_required}}{A vector with the names of the required checks.}

\item{\code{get_roles}}{The roles to select contributors for the \code{CITATION}.}

\item{\code{get_spelling}}{Return the issues found by \code{check_spelling()}}

\item{\code{fail}}{A logical indicating if all checks passed.}

\item{\code{template}}{A list for a check list template.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-checklist-add_error}{\code{checklist$add_error()}}
\item \href{#method-checklist-add_linter}{\code{checklist$add_linter()}}
\item \href{#method-checklist-add_motivation}{\code{checklist$add_motivation()}}
\item \href{#method-checklist-add_notes}{\code{checklist$add_notes()}}
\item \href{#method-checklist-add_rcmdcheck}{\code{checklist$add_rcmdcheck()}}
\item \href{#method-checklist-add_spelling}{\code{checklist$add_spelling()}}
\item \href{#method-checklist-add_warnings}{\code{checklist$add_warnings()}}
\item \href{#method-checklist-allowed}{\code{checklist$allowed()}}
\item \href{#method-checklist-confirm_motivation}{\code{checklist$confirm_motivation()}}
\item \href{#method-checklist-new}{\code{checklist$new()}}
\item \href{#method-checklist-print}{\code{checklist$print()}}
\item \href{#method-checklist-set_roles}{\code{checklist$set_roles()}}
\item \href{#method-checklist-set_required}{\code{checklist$set_required()}}
\item \href{#method-checklist-update_keywords}{\code{checklist$update_keywords()}}
\item \href{#method-checklist-clone}{\code{checklist$clone()}}
}
}
\if{html}{\out{
<details open><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="checklist" data-topic="spelling" data-id="set_default"><a href='../../checklist/html/spelling.html#method-spelling-set_default'><code>checklist::spelling$set_default()</code></a></li>
<li><span class="pkg-link" data-pkg="checklist" data-topic="spelling" data-id="set_exceptions"><a href='../../checklist/html/spelling.html#method-spelling-set_exceptions'><code>checklist::spelling$set_exceptions()</code></a></li>
<li><span class="pkg-link" data-pkg="checklist" data-topic="spelling" data-id="set_ignore"><a href='../../checklist/html/spelling.html#method-spelling-set_ignore'><code>checklist::spelling$set_ignore()</code></a></li>
<li><span class="pkg-link" data-pkg="checklist" data-topic="spelling" data-id="set_other"><a href='../../checklist/html/spelling.html#method-spelling-set_other'><code>checklist::spelling$set_other()</code></a></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-add_error"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-add_error}{}}}
\subsection{Method \code{add_error()}}{
Add errors
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$add_error(errors, item)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{errors}}{A vector with errors.}

\item{\code{item}}{The item on which to store the errors.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-add_linter"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-add_linter}{}}}
\subsection{Method \code{add_linter()}}{
Add results from \code{lintr::lint_package()}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$add_linter(linter)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{linter}}{A vector with linter errors.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-add_motivation"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-add_motivation}{}}}
\subsection{Method \code{add_motivation()}}{
Add motivation for allowed issues.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$add_motivation(which = c("warnings", "notes"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{which}}{Which kind of issue to add.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-add_notes"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-add_notes}{}}}
\subsection{Method \code{add_notes()}}{
Add notes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$add_notes(notes)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{notes}}{A vector with notes.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-add_rcmdcheck"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-add_rcmdcheck}{}}}
\subsection{Method \code{add_rcmdcheck()}}{
Add results from \code{rcmdcheck::rcmdcheck}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$add_rcmdcheck(errors, warnings, notes)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{errors}}{A vector with errors.}

\item{\code{warnings}}{A vector with warning messages.}

\item{\code{notes}}{A vector with notes.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-add_spelling"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-add_spelling}{}}}
\subsection{Method \code{add_spelling()}}{
Add results from \code{check_spelling()}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$add_spelling(issues)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{issues}}{A \code{data.frame} with spell checking issues.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-add_warnings"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-add_warnings}{}}}
\subsection{Method \code{add_warnings()}}{
Add warnings
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$add_warnings(warnings)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{warnings}}{A vector with warnings.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-allowed"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-allowed}{}}}
\subsection{Method \code{allowed()}}{
Add allowed warnings and notes
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$allowed(
  warnings = vector(mode = "list", length = 0),
  notes = vector(mode = "list", length = 0)
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{warnings}}{A vector with allowed warning messages.
Defaults to an empty list.}

\item{\code{notes}}{A vector with allowed notes.
Defaults to an empty list.}

\item{\code{package}}{Does the check list refers to a package.
Defaults to \code{TRUE}.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-confirm_motivation"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-confirm_motivation}{}}}
\subsection{Method \code{confirm_motivation()}}{
Confirm the current motivation for allowed issues.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$confirm_motivation(which = c("warnings", "notes"))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{which}}{Which kind of issue to confirm.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-new"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-new}{}}}
\subsection{Method \code{new()}}{
Initialize a new \code{checklist} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$new(x = ".", language, package = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{x}}{The path to the root of the project.}

\item{\code{language}}{The default language for spell checking.}

\item{\code{package}}{Is this a package or a project?}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-print"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-print}{}}}
\subsection{Method \code{print()}}{
Print the \code{checklist} object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{currently ignored.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-set_roles"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-set_roles}{}}}
\subsection{Method \code{set_roles()}}{
set roles
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$set_roles(roles)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{roles}}{A vector with roles.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-set_required"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-set_required}{}}}
\subsection{Method \code{set_required()}}{
set required checks
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$set_required(checks = character(0))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{checks}}{a vector of required checks}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-update_keywords"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-update_keywords}{}}}
\subsection{Method \code{update_keywords()}}{
Update the keywords.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$update_keywords(keywords = character(0))}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{keywords}}{a character vector with the new keywords.
The default empty vector (\code{character(0)}) will erase the keywords.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-checklist-clone"></a>}}
\if{latex}{\out{\hypertarget{method-checklist-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{checklist$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
