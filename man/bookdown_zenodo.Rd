% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bookdown_zenodo.R
\name{bookdown_zenodo}
\alias{bookdown_zenodo}
\title{Render a \code{bookdown} and upload to Zenodo}
\usage{
bookdown_zenodo(
  path,
  zip_format = c("bookdown::gitbook", "INBOmd::gitbook"),
  single_format = c("bookdown::pdf_book", "bookdown::epub_book", "INBOmd::pdf_report",
    "INBOmd::epub_book"),
  token,
  sandbox = TRUE,
  logger = "INFO"
)
}
\arguments{
\item{path}{The root folder of the report}

\item{zip_format}{A vector with output formats that generate multiple files.
The function will bundle all the files in a zip file for every format.}

\item{single_format}{A vector with output formats that generate a single
output file.
The output will remain as is.}

\item{token}{the user token for Zenodo.
By default an attempt will be made to retrieve token using \code{zenodo_pat()}.}

\item{sandbox}{When \code{TRUE}, upload a test version to
https://sandbox.zenodo.org.
When \code{FALSE}, upload the final version to https://zenodo.org.}

\item{logger}{Type of logger for Zenodo upload.
Defaults to \code{"INFO"} which provides minimal logs.
Use \code{NULL} to hide the logs.
\code{"DEBUG"} provides the full log.}
}
\description{
First clears all the existing files in the \code{output_dir} set in
\verb{_bookdown_.yml}.
Then renders all required output formats and uploads them to Zenodo.
\code{bookdown_zenodo()} creates a draft record when you don't specify a community
in the yaml.
Otherwise it creates a review request for the first community.
}
\seealso{
Other utils: 
\code{\link{ask_yes_no}()},
\code{\link{c_sort}()},
\code{\link{clean_git}()},
\code{\link{create_hexsticker}()},
\code{\link{execshell}()},
\code{\link{is_repository}()},
\code{\link{is_workdir_clean}()},
\code{\link{menu_first}()},
\code{\link{new_branch}()},
\code{\link{orcid2person}()},
\code{\link{store_authors}()},
\code{\link{use_author}()},
\code{\link{validate_email}()},
\code{\link{validate_orcid}()},
\code{\link{yesno}()}
}
\concept{utils}
