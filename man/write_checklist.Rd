% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/write_checklist.R
\name{write_checklist}
\alias{write_checklist}
\title{Write a check list with allowed issues in the source code}
\usage{
write_checklist(x = ".")
}
\arguments{
\item{x}{Either a \code{checklist} object or a path to the source code.
Defaults to \code{.}.}
}
\description{
checklist stores it configuration as a \code{checklist.yml} file.
\code{create_package()}, \code{setup_package()} and \code{setup_source()} generate a default
file.
If you need to allow some warnings or notes, you need to update the
configuration.
}
\details{
First run \code{x <- checklist::check_package()} or
\code{x <- checklist::check_source()}.
These commands run the checks and store the \code{checklist} object in the
variable \code{x}.
Next you can store the configuration with \code{checklist::write_checklist(x)}.
This will first list any existing allowed warnings or notes.
For every one of them, choose whether you want to keep it or not.
Next, the function presents every new warning or note which you may allow or
not.
If you choose to allow a warning or note, you must provide a motivation.
Please provide a sensible motivation.
Keep in mind that \code{checklist.yml} stores these motivations in plain text,
so they are visible for other users.
We use the \code{yesno()} function to make sure you carefully read the questions.
}
\section{Caveat}{
When you allow a warning or note, this warning or note must appear.
Otherwise you get a "missing warning" or "missing note" error.
So if you fix an allowed warning or note, you need to rerun
\code{checklist::write_checklist(x)} and remove the old version.

If you can solve a warning or note, then solve it rather than to allow it.
Only allow a warning or note in case of a generic "problem" that you can't
solve.
The best example is the \verb{checking CRAN incoming feasibility ... NOTE New submission} which appears when checking a package not on
\href{https://cran.r-project.org/}{CRAN}.
That is should an allowed note as long as the package is not on CRAN.
Or permanently when your package is not intended for CRAN.

Do not allow a warning or note to fix an issue specific to your machine.
That will result in an error when checking the package on an other machine
(e.g. GitHub actions).
}

\seealso{
Other both: 
\code{\link{add_badges}()},
\code{\link{check_filename}()},
\code{\link{check_lintr}()},
\code{\link{check_spelling}()},
\code{\link{custom_dictionary}()},
\code{\link{print.checklist_spelling}()},
\code{\link{read_checklist}()},
\code{\link{read_organisation}()},
\code{\link{write_organisation}()}
}
\concept{both}
